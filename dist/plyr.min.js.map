{"version":3,"sources":["src/js/utils/is.js","src/js/utils/events.js","src/js/utils/elements.js","src/js/utils/animation.js","src/js/utils/browser.js","src/js/support.js","src/js/html5.js","src/js/utils/objects.js","src/js/utils/strings.js","src/js/i18n.js","src/js/utils/arrays.js","src/js/storage.js","src/js/utils/fetch.js","src/js/utils/loadSprite.js","src/js/utils/time.js","src/js/controls.js","src/js/utils/urls.js","src/js/captions.js","src/js/config/defaults.js","src/js/config/types.js","src/js/console.js","src/js/fullscreen.js","src/js/hahowCustomControl.js","src/js/utils/loadImage.js","src/js/ui.js","src/js/listeners.js","src/js/logo.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils/loadScript.js","src/js/plugins/vimeo.js","src/js/plugins/youtube.js","src/js/media.js","src/js/plugins/ads.js","src/js/plugins/lectureNote.js","src/js/source.js","src/js/plyr.js"],"names":["getConstructor","input","constructor","instanceOf","Boolean","isNullOrUndefined","isObject","Object","isString","String","isArray","Array","isNodeList","NodeList","isEmpty","length","keys","is","nullOrUndefined","object","number","Number","isNaN","string","boolean","function","Function","array","weakMap","WeakMap","nodeList","element","Element","textNode","Text","event","Event","cue","window","TextTrackCue","VTTCue","track","TextTrack","kind","url","URL","startsWith","hostname","e","empty","supportsPassiveListeners","supported","options","defineProperty","get","addEventListener","removeEventListener","toggleListener","callback","toggle","arguments","undefined","_this","this","passive","capture","events","split","forEach","type","eventListeners","push","on","call","off","once","onceCallback","_len","args","_key","apply","triggerEvent","bubbles","detail","CustomEvent","assign","plyr","dispatchEvent","err","Error","JSON","stringify","wrap","elements","wrapper","targets","from","reverse","index","child","cloneNode","parent","parentNode","sibling","nextSibling","appendChild","insertBefore","setAttributes","attributes","entries","filter","_ref","value","slicedToArray","_ref3","_ref4","key","setAttribute","createElement","text","document","innerText","insertElement","removeElement","removeChild","emptyElement","childNodes","lastChild","replaceElement","newChild","oldChild","replaceChild","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","trim","className","replace","parts","charAt","class","id","toggleHidden","hidden","hide","hasAttribute","removeAttribute","toggleClass","force","method","classList","contains","hasClass","matches","querySelectorAll","includes","getElements","container","getElement","querySelector","getFocusElement","focused","activeElement","body","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","find","style","range","browser","isIE","documentMode","isWebkit","documentElement","test","navigator","userAgent","isIPhone","platform","isIos","isEdge","defaultCodecs","audio/ogg","audio/wav","video/webm","video/mp4","video/ogg","support","audio","video","check","provider","playsinline","canPlayInline","api","ui","rangeInput","pip","webkitSetPresentationMode","airplay","WebKitPlaybackTargetAvailabilityEvent","mime","inputType","_inputType$split","mediaType","isHTML5","media","canPlayType","textTracks","touch","transitions","reducedMotion","matchMedia","html5","getSources","source","getAttribute","getQualityOptions","map","extend","player","configurable","set","_player$media","currentTime","paused","preload","readyState","pause","setImmediate","src","play","load","speed","storage","controls","updateSetting","quality","cancelRequests","sources","config","blankVideo","debug","log","getDeep","path","reduce","obj","target","shift","concat","format","toString","match","i","replaceAll","RegExp","toTitleCase","toUpperCase","substr","toLowerCase","toCamelCase","toPascalCase","slice","getHTML","innerHTML","i18n","{seektime}","seekTime","{title}","title","_ref2","dedupe","item","indexOf","Storage","classCallCheck","enabled","store","localStorage","getItem","json","parse","setItem","removeItem","fetch","responseType","Promise","resolve","reject","request","XMLHttpRequest","responseText","response","status","open","send","loadSprite","hasId","exists","getElementById","update","data","insertAdjacentElement","useStorage","cached","prefix","content","then","result","catch","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","hours","mins","secs","getIconUrl","cors","iconUrl","location","host","svg4everybody","findElements","selectors","buttons","restart","rewind","fastForward","mute","settings","captions","fullscreen","progress","inputs","seek","volume","display","buffer","duration","seekTooltip","classNames","tooltip","error","warn","toggleNativeControls","createIcon","iconPath","iconPrefix","icon","createElementNS","role","focusable","use","setAttributeNS","createLabel","attr","join","createBadge","badge","menu","createButton","buttonType","button","label","labelPressed","iconPressed","control","controlPressed","enumerable","pressed","createRange","min","max","step","autocomplete","aria-label","aria-valuemin","aria-valuemax","aria-valuenow","updateRangeFill","createProgress","aria-hidden","suffixKey","played","suffix","createTime","createMenuItem","list","_ref$badge","_ref$checked","checked","radio","name","faux","insertAdjacentHTML","updateTimeDisplay","updateVolume","setRange","muted","updateProgress","current","toFixed","getElementsByTagName","nodeValue","setProgress","buffered","percent","setProperty","updateSeekTooltip","_this2","tooltips","clientRect","getBoundingClientRect","visible","_toggle","width","pageX","left","parseFloat","timeUpdate","invert","invertTime","seeking","durationUpdate","Math","pow","hasDuration","displayDuration","toggleTab","setting","tabs","setQualityMenu","_this3","panes","checkMenu","getBadge","sort","a","b","sorting","getLabel","pane","currentTrack","captionPosition","default","setCaptionsMenu","_this4","tracks","getTracks","toggled","language","unshift","bind","setCaptionsPositionMenu","_this5","position","setSpeedMenu","_this6","isVimeo","values","some","tab","toggleMenu","form","show","isMenuItem","isButton","stopPropagation","getTabSize","clone","opacity","scrollWidth","height","scrollHeight","showTab","_this7","size","restore","propertyName","focus","create","_this8","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","inject","_this9","floor","random","props","seektime","setTimeout","offsetHeight","_config","labels","parseUrl","parser","href","buildUrlParams","params","URLSearchParams","setup","isVideo","isYouTube","protocol","blob","createObjectURL","languages","userLanguage","active","setPosition","trackEvents","_captions","meta","currentTrackNode","languageExists","mode","updateCues","setLanguage","customMenu","caption","activeClass","findTrack","toConsumableArray","embed","enableTextTrack","has","sortIsDefault","sorted","every","getCurrentTrack","cues","activeCues","getCueAsHTML","cueText","setDefault","defaultLanguage","captionsActive","captionsLanguage","findLanguageList","prototype","defaults","autoplay","autopause","toggleInvert","ratio","clickToPlay","hideControls","resetOnEnd","disableContextMenu","logo","link","fullscreenContainer","loop","selected","keyboard","global","fallback","iosNative","seekLabel","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","enterZoom","exitZoom","frameTitle","noCaptions","caption-position","captionPositionLabel","top","bottom","menuBack","normal","start","end","all","reset","disabled","advertisement","qualityBadge","2160","1440","1080","720","576","480","urls","vimeo","sdk","iframe","youtube","googleIMA","listeners","editable","layer","topLayer","bottomLayer","right","zoom","embedContainer","poster","posterEnabled","ads","playing","stopped","loading","hover","isTouch","uiSupported","noTransition","tabFocus","outerContainer","google","publisherId","providers","types","noop","Console","console","onChange","isZoom","zoomActive","isIosNative","isOutterContainerSet","first","last","keyCode","shiftKey","preventDefault","toggleFallback","scrollPosition","x","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","property","native","toggleZoom","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","pre","hahow","createControls","bottomLeft","bottomRight","addLecturneNoteBtn","lectureNote","addLectureNote","loadImage","minWidth","image","Image","handler","onload","onerror","naturalWidth","addStyleHook","addStylehookToFullscreenContainer","build","ready","checkPlaying","setTitle","setPoster","isEmbed","togglePoster","enable","backgroundImage","backgroundSize","toggleControls","checkLoading","clearTimeout","timers","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","isLoadedLectureNote","addLectureNoteButtonStatus","delay","isAlreadyRegisterEventListener","hasAudio","initialized","managerPromise","proxyEvents","_event$detail","isAudio","ended","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","currentTarget","eventType","done","seekTo","_player","webkitDirectionInvertedFromDevice","_map","deltaX","deltaY","_map2","direction","sign","abs","logoContainer","imageContainer","linkElement","logoElement","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","splice","executeCallbacks","depsNotFound","success","loadFile","callbackFn","numTries","isCss","doc","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","rel","onbeforeload","ev","sheet","cssText","defaultPrevented","head","loadjs","paths","arg1","arg2","fn","numWaiting","loadFiles","deps","bundleIds","r","subscribe","isDefined","factory","loadScript","assurePlaybackState","hasPlayed","setAspectRatio","Vimeo","_split","_split2","padding","paddingBottom","offset","transform","byline","portrait","transparent","gesture","$2","thumbnail_large","pathname","Player","disableTextTrack","stop","restorePause","setVolume","setCurrentTime","setPlaybackRate","setLoop","currentSrc","getVideoUrl","getVideoWidth","getVideoHeight","dimensions","getRatio","w","h","getAspectRatio","setAutopause","state","getVideoTitle","getCurrentTime","getDuration","getTextTracks","_ref$cues","strippedCues","fragment","createDocumentFragment","firstChild","getPaused","seconds","mapQualityUnit","entry","hd2160","hd1440","hd1080","hd720","large","medium","small","tiny","YT","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","currentId","posterSrc","format$$1","playerVars","hl","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","2","5","100","101","150","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stopVideo","getPlaybackQuality","setPlaybackQuality","getAvailablePlaybackRates","clearInterval","buffering","setInterval","getVideoLoadedFraction","lastBuffered","onStateChange","levels","getAvailableQualityLevels","level","unMute","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","setAdWillPlayMuted","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","AdEvent","onAdEvent","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","_this12","base","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","LectureNoteModel","showStatus","ShowStatus","Edit","noteStatus","NoteStatus","Create","note","Hide","Normal","AddLectureNoteButtonStatus","Enable","Disable","Hidden","LectureNote","lectureNoteList","lectureNoteContainer","beforeAddLectureNotePlayerState","beforeEditLectureNotePlayerState","hiddenLectureNote","updateAddLectureNoteButtonUI","addLectureNoteButton","getContainer","isLectureNoteExists","_id","lectureNoteDOM","generateLectureNoteDOM","lectureNotes","setupUI","enableLectureNote","round","getSameTimeLectureNote","contentContianer","clickEvent","disableLectureNote","newLectureNote","parentElement","progresses","lectureNoteId","cancelTimeout","data-id","mark","contentContainer","contentTextarea","placeholder","maxLength","rows","contentShowText","trashIconWrapper","trashIcon","removeLectureNote","leftLimit","isInComposition","group","groupEnd","insertElements","attribute","change","clear","prevType","prevProvider","_sources$","_sources$$provider","tagName","crossorigin","defaultCaption","defaultTracks","srclang","Plyr","failed","jQuery","original","getProviderByUrl","search","truthy","searchParams","webkitShowPlaybackTargetPicker","isHidden","hiding","eventName","soft","unload","inputIsValid","fauxDuration","realDuration","Infinity","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","prev","curr","closest","states","webkitPresentationMode","inline","t"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Type checking utils\n// ==========================================================================\n\nconst getConstructor = input => (input !== null && typeof input !== 'undefined' ? input.constructor : null);\nconst instanceOf = (input, constructor) => Boolean(input && constructor && input instanceof constructor);\nconst isNullOrUndefined = input => input === null || typeof input === 'undefined';\nconst isObject = input => getConstructor(input) === Object;\nconst isNumber = input => getConstructor(input) === Number && !Number.isNaN(input);\nconst isString = input => getConstructor(input) === String;\nconst isBoolean = input => getConstructor(input) === Boolean;\nconst isFunction = input => getConstructor(input) === Function;\nconst isArray = input => Array.isArray(input);\nconst isWeakMap = input => instanceOf(input, WeakMap);\nconst isNodeList = input => instanceOf(input, NodeList);\nconst isElement = input => instanceOf(input, Element);\nconst isTextNode = input => getConstructor(input) === Text;\nconst isEvent = input => instanceOf(input, Event);\nconst isCue = input => instanceOf(input, window.TextTrackCue) || instanceOf(input, window.VTTCue);\nconst isTrack = input => instanceOf(input, TextTrack) || (!isNullOrUndefined(input) && isString(input.kind));\n\nconst isEmpty = input =>\n    isNullOrUndefined(input) ||\n    ((isString(input) || isArray(input) || isNodeList(input)) && !input.length) ||\n    (isObject(input) && !Object.keys(input).length);\n\nconst isUrl = input => {\n    // Accept a URL object\n    if (instanceOf(input, window.URL)) {\n        return true;\n    }\n\n    // Add the protocol if required\n    let string = input;\n    if (!input.startsWith('http://') || !input.startsWith('https://')) {\n        string = `http://${input}`;\n    }\n\n    try {\n        return !isEmpty(new URL(string).hostname);\n    } catch (e) {\n        return false;\n    }\n};\n\nexport default {\n    nullOrUndefined: isNullOrUndefined,\n    object: isObject,\n    number: isNumber,\n    string: isString,\n    boolean: isBoolean,\n    function: isFunction,\n    array: isArray,\n    weakMap: isWeakMap,\n    nodeList: isNodeList,\n    element: isElement,\n    textNode: isTextNode,\n    event: isEvent,\n    cue: isCue,\n    track: isTrack,\n    url: isUrl,\n    empty: isEmpty,\n};\n","// ==========================================================================\n// Event utils\n// ==========================================================================\n\nimport is from './is';\n\n// Check for passive event listener support\n// https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n// https://www.youtube.com/watch?v=NPM6172J22g\nconst supportsPassiveListeners = (() => {\n    // Test via a getter in the options object to see if the passive property is accessed\n    let supported = false;\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get() {\n                supported = true;\n                return null;\n            },\n        });\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n        // Do nothing\n    }\n\n    return supported;\n})();\n\n// Toggle event listener\nexport function toggleListener(element, event, callback, toggle = false, passive = true, capture = false) {\n    // Bail if no element, event, or callback\n    if (!element || !('addEventListener' in element) || is.empty(event) || !is.function(callback)) {\n        return;\n    }\n\n    // Allow multiple events\n    const events = event.split(' ');\n\n    // Build options\n    // Default to just the capture boolean for browsers with no passive listener support\n    let options = capture;\n\n    // If passive events listeners are supported\n    if (supportsPassiveListeners) {\n        options = {\n            // Whether the listener can be passive (i.e. default never prevented)\n            passive,\n            // Whether the listener is a capturing listener or not\n            capture,\n        };\n    }\n\n    // If a single node is passed, bind the event listener\n    events.forEach(type => {\n        if (this && this.eventListeners && toggle) {\n            // Cache event listener\n            this.eventListeners.push({ element, type, callback, options });\n        }\n\n        element[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n    });\n}\n\n// Bind event handler\nexport function on(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, true, passive, capture);\n}\n\n// Unbind event handler\nexport function off(element, events = '', callback, passive = true, capture = false) {\n    toggleListener.call(this, element, events, callback, false, passive, capture);\n}\n\n// Bind once-only event handler\nexport function once(element, events = '', callback, passive = true, capture = false) {\n    function onceCallback(...args) {\n        off(element, events, onceCallback, passive, capture);\n        callback.apply(this, args);\n    }\n\n    toggleListener.call(this, element, events, onceCallback, true, passive, capture);\n}\n\n// Trigger event\nexport function triggerEvent(element, type = '', bubbles = false, detail = {}) {\n    // Bail if no element\n    if (!is.element(element) || is.empty(type)) {\n        return;\n    }\n\n    // Create and dispatch the event\n    const event = new CustomEvent(type, {\n        bubbles,\n        detail: Object.assign({}, detail, {\n            plyr: this,\n        }),\n    });\n\n    // Dispatch the event\n\n    try {\n        element.dispatchEvent(event);\n    } catch (err) {\n        throw new Error(`CustomEvent ${event.type}: ${JSON.stringify(event.detail)}`);\n    }\n}\n\n// Unbind all cached event listeners\nexport function unbindListeners() {\n    if (this && this.eventListeners) {\n        this.eventListeners.forEach(item => {\n            const { element, type, callback, options } = item;\n            element.removeEventListener(type, callback, options);\n        });\n\n        this.eventListeners = [];\n    }\n}\n\n// Run method when / if player is ready\nexport function ready() {\n    return new Promise(\n        resolve => (this.ready ? setTimeout(resolve, 0) : on.call(this, this.elements.container, 'ready', resolve)),\n    ).then(() => {});\n}\n","// ==========================================================================\n// Element utils\n// ==========================================================================\n\nimport { toggleListener } from './events';\nimport is from './is';\n\n// Wrap an element\nexport function wrap(elements, wrapper) {\n    // Convert `elements` to an array, if necessary.\n    const targets = elements.length ? elements : [elements];\n\n    // Loops backwards to prevent having to clone the wrapper on the\n    // first element (see `child` below).\n    Array.from(targets)\n        .reverse()\n        .forEach((element, index) => {\n            const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n            // Cache the current parent and sibling.\n            const parent = element.parentNode;\n            const sibling = element.nextSibling;\n\n            // Wrap the element (is automatically removed from its current\n            // parent).\n            child.appendChild(element);\n\n            // If the element had a sibling, insert the wrapper before\n            // the sibling to maintain the HTML structure; otherwise, just\n            // append it to the parent.\n            if (sibling) {\n                parent.insertBefore(child, sibling);\n            } else {\n                parent.appendChild(child);\n            }\n        });\n}\n\n// Set attributes\nexport function setAttributes(element, attributes) {\n    if (!is.element(element) || is.empty(attributes)) {\n        return;\n    }\n\n    // Assume null and undefined attributes should be left out,\n    // Setting them would otherwise convert them to \"null\" and \"undefined\"\n    Object.entries(attributes)\n        .filter(([, value]) => !is.nullOrUndefined(value))\n        .forEach(([key, value]) => element.setAttribute(key, value));\n}\n\n// Create a DocumentFragment\nexport function createElement(type, attributes, text) {\n    // Create a new <element>\n    const element = document.createElement(type);\n\n    // Set all passed attributes\n    if (is.object(attributes)) {\n        setAttributes(element, attributes);\n    }\n\n    // Add text node\n    if (is.string(text)) {\n        element.innerText = text;\n    }\n\n    // Return built element\n    return element;\n}\n\n// Inaert an element after another\nexport function insertAfter(element, target) {\n    target.parentNode.insertBefore(element, target.nextSibling);\n}\n\n// Insert a DocumentFragment\nexport function insertElement(type, parent, attributes, text) {\n    // Inject the new <element>\n    parent.appendChild(createElement(type, attributes, text));\n}\n\n// Remove element(s)\nexport function removeElement(element) {\n    if (is.nodeList(element) || is.array(element)) {\n        Array.from(element).forEach(removeElement);\n        return;\n    }\n\n    if (!is.element(element) || !is.element(element.parentNode)) {\n        return;\n    }\n\n    element.parentNode.removeChild(element);\n}\n\n// Remove all child elements\nexport function emptyElement(element) {\n    let { length } = element.childNodes;\n\n    while (length > 0) {\n        element.removeChild(element.lastChild);\n        length -= 1;\n    }\n}\n\n// Replace element\nexport function replaceElement(newChild, oldChild) {\n    if (!is.element(oldChild) || !is.element(oldChild.parentNode) || !is.element(newChild)) {\n        return null;\n    }\n\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n\n    return newChild;\n}\n\n// Get an attribute object from a string selector\nexport function getAttributesFromSelector(sel, existingAttributes) {\n    // For example:\n    // '.test' to { class: 'test' }\n    // '#test' to { id: 'test' }\n    // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n    if (!is.string(sel) || is.empty(sel)) {\n        return {};\n    }\n\n    const attributes = {};\n    const existing = existingAttributes;\n\n    sel.split(',').forEach(s => {\n        // Remove whitespace\n        const selector = s.trim();\n        const className = selector.replace('.', '');\n        const stripped = selector.replace(/[[\\]]/g, '');\n\n        // Get the parts and value\n        const parts = stripped.split('=');\n        const key = parts[0];\n        const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n        // Get the first character\n        const start = selector.charAt(0);\n\n        switch (start) {\n            case '.':\n                // Add to existing classname\n                if (is.object(existing) && is.string(existing.class)) {\n                    existing.class += ` ${className}`;\n                }\n\n                attributes.class = className;\n                break;\n\n            case '#':\n                // ID selector\n                attributes.id = selector.replace('#', '');\n                break;\n\n            case '[':\n                // Attribute selector\n                attributes[key] = value;\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    return attributes;\n}\n\n// Toggle hidden\nexport function toggleHidden(element, hidden) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    let hide = hidden;\n\n    if (!is.boolean(hide)) {\n        hide = !element.hasAttribute('hidden');\n    }\n\n    if (hide) {\n        element.setAttribute('hidden', '');\n    } else {\n        element.removeAttribute('hidden');\n    }\n}\n\n// Mirror Element.classList.toggle, with IE compatibility for \"force\" argument\nexport function toggleClass(element, className, force) {\n    if (is.element(element)) {\n        let method = 'toggle';\n        if (typeof force !== 'undefined') {\n            method = force ? 'add' : 'remove';\n        }\n\n        element.classList[method](className);\n        return element.classList.contains(className);\n    }\n\n    return null;\n}\n\n// Has class name\nexport function hasClass(element, className) {\n    return is.element(element) && element.classList.contains(className);\n}\n\n// Element matches selector\nexport function matches(element, selector) {\n    const prototype = { Element };\n\n    function match() {\n        return Array.from(document.querySelectorAll(selector)).includes(this);\n    }\n\n    const matches =\n        prototype.matches ||\n        prototype.webkitMatchesSelector ||\n        prototype.mozMatchesSelector ||\n        prototype.msMatchesSelector ||\n        match;\n\n    return matches.call(element, selector);\n}\n\n// Find all elements\nexport function getElements(selector) {\n    return this.elements.container.querySelectorAll(selector);\n}\n\n// Find a single element\nexport function getElement(selector) {\n    return this.elements.container.querySelector(selector);\n}\n\n// Get the focused element\nexport function getFocusElement() {\n    let focused = document.activeElement;\n\n    if (!focused || focused === document.body) {\n        focused = null;\n    } else {\n        focused = document.querySelector(':focus');\n    }\n\n    return focused;\n}\n\n// Trap focus inside container\nexport function trapFocus(element = null, toggle = false) {\n    if (!is.element(element)) {\n        return;\n    }\n\n    const focusable = getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n    const first = focusable[0];\n    const last = focusable[focusable.length - 1];\n\n    const trap = event => {\n        // Bail if not tab key or not fullscreen\n        if (event.key !== 'Tab' || event.keyCode !== 9) {\n            return;\n        }\n\n        // Get the current focused element\n        const focused = getFocusElement();\n\n        if (focused === last && !event.shiftKey) {\n            // Move focus to first element that can be tabbed if Shift isn't used\n            first.focus();\n            event.preventDefault();\n        } else if (focused === first && event.shiftKey) {\n            // Move focus to last element that can be tabbed if Shift is used\n            last.focus();\n            event.preventDefault();\n        }\n    };\n\n    toggleListener.call(this, this.elements.container, 'keydown', trap, toggle, false);\n}\n","// ==========================================================================\n// Animation utils\n// ==========================================================================\n\nimport { toggleHidden } from './elements';\nimport is from './is';\n\nexport const transitionEndEvent = (() => {\n    const element = document.createElement('span');\n\n    const events = {\n        WebkitTransition: 'webkitTransitionEnd',\n        MozTransition: 'transitionend',\n        OTransition: 'oTransitionEnd otransitionend',\n        transition: 'transitionend',\n    };\n\n    const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n    return is.string(type) ? events[type] : false;\n})();\n\n// Force repaint of element\nexport function repaint(element) {\n    setTimeout(() => {\n        toggleHidden(element, true);\n        element.offsetHeight; // eslint-disable-line\n        toggleHidden(element, false);\n    }, 0);\n}\n","// ==========================================================================\n// Browser sniffing\n// Unfortunately, due to mixed support, UA sniffing is required\n// ==========================================================================\n\nconst browser = {\n    isIE: /* @cc_on!@ */ false || !!document.documentMode,\n    isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n    isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n    isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n    isEdge: /Edge\\/\\d./i.test(navigator.userAgent),\n};\n\nexport default browser;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport { transitionEndEvent } from './utils/animation';\nimport browser from './utils/browser';\nimport { createElement } from './utils/elements';\nimport is from './utils/is';\n\n// Default codecs for checking mimetype support\nconst defaultCodecs = {\n    'audio/ogg': 'vorbis',\n    'audio/wav': '1',\n    'video/webm': 'vp8, vorbis',\n    'video/mp4': 'avc1.42E01E, mp4a.40.2',\n    'video/ogg': 'theora',\n};\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n        const api = support[type] || provider !== 'html5';\n        const ui = api && support.rangeInput && (type !== 'video' || !browser.isIPhone || canPlayInline);\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => !browser.isIPhone && is.function(createElement('video').webkitSetPresentationMode))(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(inputType) {\n        const [mediaType] = inputType.split('/');\n        if (!this.isHTML5 || mediaType !== this.type) {\n            return false;\n        }\n\n        let type;\n        if (inputType && inputType.includes('codecs=')) {\n            // Use input directly\n            type = inputType;\n        } else if (inputType === 'audio/mpeg') {\n            // Skip codec\n            type = 'audio/mpeg;';\n        } else if (inputType in defaultCodecs) {\n            // Use codec\n            type = `${inputType}; codecs=\"${defaultCodecs[inputType]}\"`;\n        }\n\n        try {\n            return Boolean(type && this.media.canPlayType(type).replace(/no/, ''));\n        } catch (err) {\n            return false;\n        }\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport controls from './controls';\nimport is from './utils/is';\nimport support from './support';\nimport { removeElement } from './utils/elements';\nimport { triggerEvent } from './utils/events';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return [];\n        }\n\n        const sources = Array.from(this.media.querySelectorAll('source'));\n\n        // Filter out unsupported sources\n        return sources.filter(source => support.mime.call(this, source.getAttribute('type')));\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        // Get sizes from <source> elements\n        return html5.getSources\n            .call(this)\n            .map(source => Number(source.getAttribute('size')))\n            .filter(Boolean);\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            configurable: true,\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n                const source = sources.find(source => source.getAttribute('src') === player.source);\n\n                // Return size, if match is found\n                return source && Number(source.getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                // Get first match for requested size\n                const source = sources.find(source => Number(source.getAttribute('size')) === input);\n\n                // No matching source found\n                if (!source) {\n                    return;\n                }\n\n                // Get current state\n                const { currentTime, paused, preload, readyState } = player.media;\n\n                player.pause();\n\n                setImmediate(() => {\n                    // Set new source\n                    player.media.src = source.getAttribute('src');\n\n                    // Prevent loading if preload=\"none\" and the current source isn't loaded (#1044)\n                    if (preload !== 'none' || readyState) {\n                        // Restore time\n                        player.once('loadedmetadata', () => {\n                            if (player.currentTime === 0) {\n                                player.currentTime = currentTime;\n                            }\n\n                            // Resume playing\n                            if (!paused) {\n                                player.play();\n                            }\n                        });\n\n                        // Load new source\n                        player.media.load();\n                    }\n\n                    // restore speed\n                    const speed = player.storage.get('speed');\n                    if (is.number(speed)) {\n                        player.speed = speed;\n                        controls.updateSetting.call(player, 'speed', speed);\n                    }\n\n                    // Trigger change event\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: input,\n                    });\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const sources = html5.getSources.call(this);\n        if (sources && sources.length > 0) {\n            // set source to blank string to avoid memory leak\n            sources.forEach((source) => {\n                source.setAttribute('src', '');\n            });\n            this.media.load();\n        }\n        // Remove child sources\n        removeElement(sources);\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Object utils\n// ==========================================================================\n\nimport is from './is';\n\n// Clone nested objects\nexport function cloneDeep(object) {\n    return JSON.parse(JSON.stringify(object));\n}\n\n// Get a nested value in an object\nexport function getDeep(object, path) {\n    return path.split('.').reduce((obj, key) => obj && obj[key], object);\n}\n\n// Deep extend destination object with N more objects\nexport function extend(target = {}, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n\n    const source = sources.shift();\n\n    if (!is.object(source)) {\n        return target;\n    }\n\n    Object.keys(source).forEach(key => {\n        if (is.object(source[key])) {\n            if (!Object.keys(target).includes(key)) {\n                Object.assign(target, { [key]: {} });\n            }\n\n            extend(target[key], source[key]);\n        } else {\n            Object.assign(target, { [key]: source[key] });\n        }\n    });\n\n    return extend(target, ...sources);\n}\n","// ==========================================================================\n// String utils\n// ==========================================================================\n\nimport is from './is';\n\n// Generate a random ID\nexport function generateId(prefix) {\n    return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n}\n\n// Format string\nexport function format(input, ...args) {\n    if (is.empty(input)) {\n        return input;\n    }\n\n    return input.toString().replace(/{(\\d+)}/g, (match, i) => args[i].toString());\n}\n\n// Get percentage\nexport function getPercentage(current, max) {\n    if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n        return 0;\n    }\n\n    return (current / max * 100).toFixed(2);\n}\n\n// Replace all occurances of a string in a string\nexport function replaceAll(input = '', find = '', replace = '') {\n    return input.replace(\n        new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'),\n        replace.toString(),\n    );\n}\n\n// Convert to title case\nexport function toTitleCase(input = '') {\n    return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n}\n\n// Convert string to pascalCase\nexport function toPascalCase(input = '') {\n    let string = input.toString();\n\n    // Convert kebab case\n    string = replaceAll(string, '-', ' ');\n\n    // Convert snake case\n    string = replaceAll(string, '_', ' ');\n\n    // Convert to title case\n    string = toTitleCase(string);\n\n    // Convert to pascal case\n    return replaceAll(string, ' ', '');\n}\n\n// Convert string to pascalCase\nexport function toCamelCase(input = '') {\n    let string = input.toString();\n\n    // Convert to pascal case\n    string = toPascalCase(string);\n\n    // Convert first character to lowercase\n    return string.charAt(0).toLowerCase() + string.slice(1);\n}\n\n// Remove HTML from a string\nexport function stripHTML(source) {\n    const fragment = document.createDocumentFragment();\n    const element = document.createElement('div');\n    fragment.appendChild(element);\n    element.innerHTML = source;\n    return fragment.firstChild.innerText;\n}\n\n// Like outerHTML, but also works for DocumentFragment\nexport function getHTML(element) {\n    const wrapper = document.createElement('div');\n    wrapper.appendChild(element);\n    return wrapper.innerHTML;\n}\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport is from './utils/is';\nimport { getDeep } from './utils/objects';\nimport { replaceAll } from './utils/strings';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (is.empty(key) || is.empty(config)) {\n            return '';\n        }\n\n        let string = getDeep(config.i18n, key);\n\n        if (is.empty(string)) {\n            return '';\n        }\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([key, value]) => {\n            string = replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Array utils\n// ==========================================================================\n\nimport is from './is';\n\n// Remove duplicates in an array\nexport function dedupe(array) {\n    if (!is.array(array)) {\n        return array;\n    }\n\n    return array.filter((item, index) => array.indexOf(item) === index);\n}\n\n// Get the closest value in an array\nexport function closest(array, value) {\n    if (!is.array(array) || !array.length) {\n        return null;\n    }\n\n    return array.reduce((prev, curr) => (Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev));\n}\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported || !this.enabled) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Fetch wrapper\n// Using XHR to avoid issues with older browsers\n// ==========================================================================\n\nexport default function fetch(url, responseType = 'text') {\n    return new Promise((resolve, reject) => {\n        try {\n            const request = new XMLHttpRequest();\n\n            // Check for CORS support\n            if (!('withCredentials' in request)) {\n                return;\n            }\n\n            request.addEventListener('load', () => {\n                if (responseType === 'text') {\n                    try {\n                        resolve(JSON.parse(request.responseText));\n                    } catch (e) {\n                        resolve(request.responseText);\n                    }\n                } else {\n                    resolve(request.response);\n                }\n            });\n\n            request.addEventListener('error', () => {\n                throw new Error(request.status);\n            });\n\n            request.open('GET', url, true);\n\n            // Set the required response type\n            request.responseType = responseType;\n\n            request.send();\n        } catch (e) {\n            reject(e);\n        }\n    });\n}\n","// ==========================================================================\n// Sprite loader\n// ==========================================================================\n\nimport Storage from '../storage';\nimport fetch from './fetch';\nimport is from './is';\n\n// Load an external SVG sprite\nexport default function loadSprite(url, id) {\n    if (!is.string(url)) {\n        return;\n    }\n\n    const prefix = 'cache';\n    const hasId = is.string(id);\n    let isCached = false;\n\n    const exists = () => document.getElementById(id) !== null;\n\n    const update = (container, data) => {\n        container.innerHTML = data;\n\n        // Check again incase of race condition\n        if (hasId && exists()) {\n            return;\n        }\n\n        // Inject the SVG to the body\n        document.body.insertAdjacentElement('afterbegin', container);\n    };\n\n    // Only load once if ID set\n    if (!hasId || !exists()) {\n        const useStorage = Storage.supported;\n\n        // Create container\n        const container = document.createElement('div');\n        container.setAttribute('hidden', '');\n\n        if (hasId) {\n            container.setAttribute('id', id);\n        }\n\n        // Check in cache\n        if (useStorage) {\n            const cached = window.localStorage.getItem(`${prefix}-${id}`);\n            isCached = cached !== null;\n\n            if (isCached) {\n                const data = JSON.parse(cached);\n                update(container, data.content);\n            }\n        }\n\n        // Get the sprite\n        fetch(url)\n            .then(result => {\n                if (is.empty(result)) {\n                    return;\n                }\n\n                if (useStorage) {\n                    window.localStorage.setItem(\n                        `${prefix}-${id}`,\n                        JSON.stringify({\n                            content: result,\n                        }),\n                    );\n                }\n\n                update(container, result);\n            })\n            .catch(() => {});\n    }\n}\n","// ==========================================================================\n// Time utils\n// ==========================================================================\n\nimport is from './is';\n\n// Time helpers\nexport const getHours = value => parseInt((value / 60 / 60) % 60, 10);\nexport const getMinutes = value => parseInt((value / 60) % 60, 10);\nexport const getSeconds = value => parseInt(value % 60, 10);\n\n// Format time to UI friendly string\nexport function formatTime(time = 0, displayHours = false, inverted = false) {\n    // Bail if the value isn't a number\n    if (!is.number(time)) {\n        return formatTime(null, displayHours, inverted);\n    }\n\n    // Format time component to add leading zero\n    const format = value => `0${value}`.slice(-2);\n\n    // Breakdown to hours, mins, secs\n    let hours = getHours(time);\n    const mins = getMinutes(time);\n    const secs = getSeconds(time);\n\n    // Do we need to display hours?\n    if (displayHours || hours > 0) {\n        hours = `${hours}:`;\n    } else {\n        hours = '';\n    }\n\n    // Render\n    return `${inverted && time > 0 ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n}\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport captions from './captions';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport support from './support';\nimport { repaint, transitionEndEvent } from './utils/animation';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    getElement,\n    getElements,\n    hasClass,\n    matches,\n    removeElement,\n    setAttributes,\n    toggleClass,\n    toggleHidden,\n} from './utils/elements';\nimport { off, on } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { extend } from './utils/objects';\nimport { getPercentage, replaceAll, toCamelCase, toTitleCase } from './utils/strings';\nimport { formatTime, getHours } from './utils/time';\n\n// TODO: Don't export a massive object - break down and create class\nconst controls = {\n    // Get icon URL\n    getIconUrl() {\n        const url = new URL(this.config.iconUrl, window.location);\n        const cors = url.host !== window.location.host || (browser.isIE && !window.svg4everybody);\n\n        return {\n            url: this.config.iconUrl,\n            cors,\n        };\n    },\n\n    // Find the UI controls\n    findElements() {\n        try {\n            this.elements.controls = getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: getElements.call(this, this.config.selectors.buttons.play),\n                pause: getElement.call(this, this.config.selectors.buttons.pause),\n                restart: getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: getElement.call(this, this.config.selectors.buttons.mute),\n                pip: getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: getElement.call(this, this.config.selectors.buttons.settings),\n                captions: getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: getElement.call(this, this.config.selectors.inputs.seek),\n                volume: getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: getElement.call(this, this.config.selectors.display.buffer),\n                currentTime: getElement.call(this, this.config.selectors.display.currentTime),\n                duration: getElement.call(this, this.config.selectors.display.duration),\n            };\n\n            // Seek tooltip\n            if (is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(\n                    `.${this.config.classNames.tooltip}`,\n                );\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.cors ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        setAttributes(\n            icon,\n            extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr = {}) {\n        // Skip i18n for abbreviations and brand names\n        const universals = {\n            pip: 'PIP',\n            airplay: 'AirPlay',\n        };\n        const text = universals[type] || i18n.get(type, this.config);\n\n        const attributes = Object.assign({}, attr, {\n            class: [attr.class, this.config.classNames.hidden].filter(Boolean).join(' '),\n        });\n        return createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (is.empty(text)) {\n            return null;\n        }\n\n        const badge = createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (!attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'zoom':\n                toggle = true;\n                label = 'enterZoom';\n                labelPressed = 'exitZoom';\n                icon = 'enter-zoom';\n                iconPressed = 'exit-zoom';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            case 'add-lecture-note':\n                type = 'add-lecture-note';\n                label = '筆記標註';\n                icon = 'add-lecture-note';\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        extend(attributes, getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        // Toggle classname when pressed property is set\n        const className = this.config.classNames.controlPressed;\n        Object.defineProperty(button, 'pressed', {\n            enumerable: true,\n            get() {\n                return hasClass(button, className);\n            },\n            set(pressed = false) {\n                toggleClass(button, className, pressed);\n            },\n        });\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek input\n        const input = createElement(\n            'input',\n            extend(\n                getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-label': i18n.get(type, this.config),\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return input;\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = createElement(\n            'progress',\n            extend(\n                getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(createElement('span', null, '0'));\n\n            const suffixKey = {\n                played: 'played',\n                buffer: 'buffered',\n            }[type];\n            const suffix = suffixKey ? i18n.get(suffixKey, this.config) : '';\n\n            progress.innerText = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const attributes = getAttributesFromSelector(this.config.selectors.display[type]);\n\n        const container = createElement(\n            'div',\n            extend(attributes, {\n                class: `plyr__time ${attributes.class}`,\n                'aria-label': i18n.get(type, this.config),\n            }),\n            '00:00',\n        );\n\n        // Reference for updates\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem({ value, list, type, title, badge = null, checked = false }) {\n        const item = createElement('li');\n\n        const label = createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = createElement(\n            'input',\n            extend(getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = createElement('span', { hidden: '' });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Format a time for display\n    formatTime(time = 0, inverted = false) {\n        // Bail if the value isn't a number\n        if (!is.number(time)) {\n            return time;\n        }\n\n        // Always display hours if duration is over an hour\n        const forceHours = getHours(this.duration) > 0;\n\n        return formatTime(time, forceHours, inverted);\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!is.element(target) || !is.number(time)) {\n            return;\n        }\n\n        // eslint-disable-next-line no-param-reassign\n        target.innerText = controls.formatTime(time, inverted);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (is.element(this.elements.inputs.volume)) {\n            controls.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (is.element(this.elements.buttons.mute)) {\n            this.elements.buttons.mute.pressed = this.muted || this.volume === 0;\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        const setProgress = (target, input) => {\n            const value = is.number(input) ? input : 0;\n            const progress = is.element(target) ? target : this.elements.display.buffer;\n\n            // Update value and label\n            if (is.element(progress)) {\n                progress.value = value;\n\n                // Update text label inside\n                const label = progress.getElementsByTagName('span')[0];\n                if (is.element(label)) {\n                    label.childNodes[0].nodeValue = value;\n                }\n            }\n        };\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                case 'seeked':\n                    value = getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        controls.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    setProgress(this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n        // Get range from event if event passed\n        const range = is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria values for https://github.com/sampotts/plyr/issues/905\n        if (matches(range, this.config.selectors.inputs.seek)) {\n            range.setAttribute('aria-valuenow', this.currentTime);\n            const currentTime = controls.formatTime(this.currentTime);\n            const duration = controls.formatTime(this.duration);\n            const format = i18n.get('seekLabel', this.config);\n            range.setAttribute(\n                'aria-valuetext',\n                format.replace('{currentTime}', currentTime).replace('{duration}', duration),\n            );\n        } else if (matches(range, this.config.selectors.inputs.volume)) {\n            const percent = range.value * 100;\n            range.setAttribute('aria-valuenow', percent);\n            range.setAttribute('aria-valuetext', `${percent}%`);\n        } else {\n            range.setAttribute('aria-valuenow', range.value);\n        }\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !is.element(this.elements.inputs.seek) ||\n            !is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.progress.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        controls.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (is.event(event) && ['mouseenter', 'mouseleave'].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        controls.updateTimeDisplay.call(\n            this,\n            this.elements.display.currentTime,\n            invert ? this.duration - this.currentTime : this.currentTime,\n            invert,\n        );\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        controls.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded or durationchange events\n    durationUpdate() {\n        // Bail if no UI or durationchange event triggered after playing/seek when invertTime is false\n        if (!this.supported.ui || (!this.config.invertTime && this.currentTime)) {\n            return;\n        }\n\n        // If duration is the 2**32 (shaka), Infinity (HLS), DASH-IF (Number.MAX_SAFE_INTEGER || Number.MAX_VALUE) indicating live we hide the currentTime and progressbar.\n        // https://github.com/video-dev/hls.js/blob/5820d29d3c4c8a46e8b75f1e3afa3e68c1a9a2db/src/controller/buffer-controller.js#L415\n        // https://github.com/google/shaka-player/blob/4d889054631f4e1cf0fbd80ddd2b71887c02e232/lib/media/streaming_engine.js#L1062\n        // https://github.com/Dash-Industry-Forum/dash.js/blob/69859f51b969645b234666800d4cb596d89c602d/src/dash/models/DashManifestModel.js#L338\n        if (this.duration >= 2**32) {\n            toggleHidden(this.elements.display.currentTime, true);\n            toggleHidden(this.elements.progress, true);\n            return;\n        }\n\n        // Update ARIA values\n        if (is.element(this.elements.inputs.seek)) {\n            this.elements.inputs.seek.setAttribute('aria-valuemax', this.duration);\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            controls.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            controls.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        toggleHidden(this.elements.settings.tabs[setting], !toggle);\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options).filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            const label = i18n.get(`qualityBadge.${quality}`, this.config);\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                    badge: getBadge(quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (is.number(value)) {\n                    const label = i18n.get(`qualityLabel.${value}`, this.config);\n\n                    if (!label.length) {\n                        return `${value}p`;\n                    }\n\n                    return label;\n                }\n\n                return toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            case 'caption-position':\n                return i18n.get(`captionPositionLabel.${value}`, this.config);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        if (setting === 'captions') {\n            value = this.currentTrack;\n        } else if (setting === 'caption-position') {\n            value = this.captionPosition;\n        } else {\n            value = !is.empty(input) ? input : this[setting];\n\n            // Get default\n            if (is.empty(value)) {\n                value = this.config[setting].default;\n            }\n\n            // Unsupported value\n            if (!is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                return;\n            }\n\n            // Disabled value\n            // We generate resolution option from real contents.\n            // Therefore, bypasss checking on ‘quality’ config.\n            if (setting !== 'quality' && !this.config[setting].options.includes(value)) {\n                this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                return;\n            }\n        }\n\n        // Get the list if we need to\n        if (!is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        toggleHidden(this.elements.settings.tabs.loop, false);\n        toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        emptyElement(list);\n\n        options.forEach(option => {\n            const item = createElement('li');\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, tracks.length);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!this.config.controls.includes('caption-position')) {\n            return;\n        }\n\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!is.element(form) || !is.element(button)) {\n            return;\n        }\n\n        const show = is.boolean(event) ? event : is.element(form) && form.hasAttribute('hidden');\n\n        if (is.event(event)) {\n            const isMenuItem = is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (is.element(form)) {\n            toggleHidden(form, !show);\n            toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.removeAttribute('hidden');\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(target = '') {\n        const { menu } = this.elements.settings;\n        const pane = document.getElementById(target);\n\n        // Nothing to show, bail\n        if (!is.element(pane)) {\n            return;\n        }\n\n        // Are we targeting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"]:not([hidden])');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || !['width', 'height'].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                off.call(this, container, transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            on.call(this, container, transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        toggleHidden(current, true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        toggleHidden(pane, false);\n\n        const tabs = getElements.call(this, `[aria-controls=\"${target}\"]`);\n        Array.from(tabs).forEach(tab => {\n            tab.setAttribute('aria-expanded', true);\n        });\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            progress.appendChild(\n                controls.createRange.call(this, 'seek', {\n                    id: `plyr-seek-${data.id}`,\n                }),\n            );\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = createElement(\n                    'span',\n                    {\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            volume.appendChild(\n                controls.createRange.call(\n                    this,\n                    'volume',\n                    extend(attributes, {\n                        id: `plyr-volume-${data.id}`,\n                    }),\n                ),\n            );\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !is.empty(this.config.settings)) {\n            const menu = createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = createElement('div');\n\n            const home = createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = createElement(\n                    'button',\n                    extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    hidden: '',\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                });\n\n                const back = createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        if (this.config.controls.includes('zoom')) {\n            container.appendChild(controls.createButton.call(this, 'zoom'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.cors) {\n                loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // Set template properties\n        const props = {\n            id: this.id,\n            seektime: this.config.seekTime,\n            title: this.config.title,\n        };\n        let update = true;\n\n        if (is.string(this.config.controls) || is.element(this.config.controls)) {\n            // String or HTMLElement passed as the option\n            container = this.config.controls;\n        } else if (is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls.call(this, props);\n            if (is.element(container)) {\n                update = false;\n            }\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n            update = false;\n        }\n\n        // Replace props with their value\n        const replace = input => {\n            let result = input;\n\n            Object.entries(props).forEach(([key, value]) => {\n                result = replaceAll(result, `{${key}}`, value);\n            });\n\n            return result;\n        };\n\n        // Update markup\n        if (update) {\n            if (is.string(this.config.controls)) {\n                container = replace(container);\n            } else if (is.element(container)) {\n                container.innerHTML = replace(container.innerHTML);\n            }\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML (needs to be before captions, hence \"afterbegin\")\n        const insertMethod = is.element(container) ? 'insertAdjacentElement' : 'insertAdjacentHTML';\n        target[insertMethod]('afterbegin', container);\n\n        // Find the elements if need be\n        if (!is.element(this.elements.controls)) {\n            controls.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const { classNames, selectors } = this.config;\n            const selector = `${selectors.controls.wrapper} ${selectors.labels} .${classNames.hidden}`;\n            const labels = getElements.call(this, selector);\n\n            Array.from(labels).forEach(label => {\n                toggleClass(label, this.config.classNames.hidden, false);\n                toggleClass(label, this.config.classNames.tooltip, true);\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// URL utils\n// ==========================================================================\n\nimport is from './is';\n\n/**\n * Parse a string to a URL object\n * @param {string} input - the URL to be parsed\n * @param {boolean} safe - failsafe parsing\n */\nexport function parseUrl(input, safe = true) {\n    let url = input;\n\n    if (safe) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        url = parser.href;\n    }\n\n    try {\n        return new URL(url);\n    } catch (e) {\n        return null;\n    }\n}\n\n// Convert object to URLSearchParams\nexport function buildUrlParams(input) {\n    const params = new URLSearchParams();\n\n    if (is.object(input)) {\n        Object.entries(input).forEach(([key, value]) => {\n            params.set(key, value);\n        });\n    }\n\n    return params;\n}\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport { dedupe } from './utils/arrays';\nimport browser from './utils/browser';\nimport {\n    createElement,\n    emptyElement,\n    getAttributesFromSelector,\n    insertAfter,\n    removeElement,\n    toggleClass,\n    hasClass,\n} from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport fetch from './utils/fetch';\nimport is from './utils/is';\nimport { getHTML } from './utils/strings';\nimport { parseUrl } from './utils/urls';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (\n                is.array(this.config.controls) &&\n                this.config.controls.includes('settings') &&\n                this.config.settings.includes('captions')\n            ) {\n                controls.setCaptionsMenu.call(this);\n                controls.setCaptionsPositionMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!is.element(this.elements.captions)) {\n            this.elements.captions = createElement('div', getAttributesFromSelector(this.config.selectors.captions));\n\n            insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const url = parseUrl(src);\n\n                if (\n                    url !== null &&\n                    url.hostname !== window.location.href.hostname &&\n                    ['http:', 'https:'].includes(url.protocol)\n                ) {\n                    fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Get and set initial data\n        // The \"preferred\" options are not realized unless / until the wanted language has a match\n        // * languages: Array of user's browser languages.\n        // * language:  The language preferred by user settings or config\n        // * active:    The state preferred by user settings or config\n        // * toggled:   The real captions state\n\n        const languages = dedupe(\n            Array.from(navigator.languages || navigator.language || navigator.userLanguage).map(language => language.split('-')[0]),\n        );\n\n        let language = (this.storage.get('language') || this.config.captions.language || 'auto').toLowerCase();\n\n        // Use first browser language when language is 'auto'\n        if (language === 'auto') {\n            [language] = languages;\n        }\n\n        let active = this.storage.get('captions');\n        if (!is.boolean(active)) {\n            ({ active } = this.config.captions);\n        }\n\n        Object.assign(this.captions, {\n            toggled: false,\n            active,\n            language,\n            languages,\n        });\n\n        captions.setPosition.call(this, this.captionPosition);\n\n        // Watch changes to textTracks and update captions menu\n        if (this.isHTML5) {\n            const trackEvents = this.config.captions.update ? 'addtrack removetrack' : 'removetrack';\n            on.call(this, this.media.textTracks, trackEvents, captions.update.bind(this));\n        }\n\n        // Update available languages in list next tick (the event must not be triggered before the listeners)\n        setTimeout(captions.update.bind(this), 0);\n    },\n\n    // Update available language options in settings based on tracks\n    update() {\n        const tracks = captions.getTracks.call(this, true);\n        // Get the wanted language\n        const { active, language, meta, currentTrackNode } = this.captions;\n        const languageExists = Boolean(tracks.find(track => track.language === language));\n\n        // Handle tracks (add event listener and \"pseudo\"-default)\n        if (this.isHTML5 && this.isVideo) {\n            tracks.filter(track => !meta.get(track)).forEach(track => {\n                this.debug.log('Track added', track);\n                // Attempt to store if the original dom element was \"default\"\n                meta.set(track, {\n                    default: track.mode === 'showing',\n                });\n\n                // Turn off native caption rendering to avoid double captions\n                track.mode = 'hidden';\n\n                // Add event listener for cue changes\n                on.call(this, track, 'cuechange', () => captions.updateCues.call(this));\n            });\n        }\n\n        // Update language first time it matches, or if the previous matching track was removed\n        if ((languageExists && this.language !== language) || !tracks.includes(currentTrackNode)) {\n            captions.setLanguage.call(this, language);\n            captions.toggle.call(this, active && languageExists);\n        }\n\n        // Enable or disable captions based on track length\n        toggleClass(this.elements.container, this.config.classNames.captions.enabled, !is.empty(tracks));\n\n        // for custom control\n        if (is.string(this.config.controls) || is.function(this.config.controls)) {\n            if (this.config.customMenu && is.function(this.config.customMenu.caption)) {\n                this.config.customMenu.caption.call(this);\n            }\n        } else if ((this.config.controls || []).includes('settings') && this.config.settings.includes('captions')) {\n            // Update available languages in list\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Toggle captions display\n    // Used internally for the toggleCaptions method, with the passive option forced to false\n    toggle(input, passive = true) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        const { toggled } = this.captions; // Current state\n        const activeClass = this.config.classNames.captions.active;\n\n        // Get the next state\n        // If the method is called without parameter, toggle based on current value\n        const active = is.nullOrUndefined(input) ? !toggled : input;\n\n        // Update state and trigger event\n        if (active !== toggled) {\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.active = active;\n                this.storage.set({ captions: active });\n            }\n\n            // Force language if the call isn't passive and there is no matching language to toggle to\n            if (!this.language && active && !passive) {\n                const tracks = captions.getTracks.call(this);\n                const track = captions.findTrack.call(this, [this.captions.language, ...this.captions.languages], true);\n\n                // Override user preferences to avoid switching languages if a matching track is added\n                this.captions.language = track.language;\n\n                // Set caption, but don't store in localStorage as user preference\n                captions.set.call(this, tracks.indexOf(track));\n                return;\n            }\n\n            // Toggle button if it's enabled\n            if (this.elements.buttons.captions) {\n                this.elements.buttons.captions.pressed = active;\n            }\n\n            // Add class hook\n            toggleClass(this.elements.container, activeClass, active);\n\n            this.captions.toggled = active;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // Trigger event (not used internally)\n            triggerEvent.call(this, this.media, active ? 'captionsenabled' : 'captionsdisabled');\n        }\n    },\n\n    // Set captions by track index\n    // Used internally for the currentTrack setter with the passive option forced to false\n    set(index, passive = true) {\n        const tracks = captions.getTracks.call(this);\n\n        // Disable captions if setting to -1\n        if (index === -1) {\n            captions.toggle.call(this, false, passive);\n            return;\n        }\n\n        if (!is.number(index)) {\n            this.debug.warn('Invalid caption argument', index);\n            return;\n        }\n\n        if (!(index in tracks)) {\n            this.debug.warn('Track not found', index);\n            return;\n        }\n\n        if (this.captions.currentTrack !== index) {\n            this.captions.currentTrack = index;\n            const track = tracks[index];\n            if(!browser.isEdge){\n                track.mode = 'showing';\n            }\n            const { language } = track || {};\n\n            // Store reference to node for invalidation on remove\n            this.captions.currentTrackNode = track;\n\n            // Update settings menu\n            controls.updateSetting.call(this, 'captions');\n\n            // When passive, don't override user preferences\n            if (!passive) {\n                this.captions.language = language;\n                this.storage.set({ language });\n            }\n\n            // Handle Vimeo captions\n            if (this.isVimeo) {\n                this.embed.enableTextTrack(language);\n            }\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'languagechange');\n        }\n\n        // Show captions\n        captions.toggle.call(this, true, passive);\n\n        if (this.isHTML5 && this.isVideo) {\n            // If we change the active track while a cue is already displayed we need to update it\n            captions.updateCues.call(this);\n        }\n    },\n\n    // Set captions by language\n    // Used internally for the language setter with the passive option forced to false\n    setLanguage(input, passive = true) {\n        if (!is.string(input)) {\n            this.debug.warn('Invalid language argument', input);\n            return;\n        }\n        // Normalize\n        const language = input.toLowerCase();\n        this.captions.language = language;\n\n        // Set currentTrack\n        const tracks = captions.getTracks.call(this);\n        const track = captions.findTrack.call(this, [language]);\n        captions.set.call(this, tracks.indexOf(track), passive);\n    },\n\n    // Get current valid caption tracks\n    // If update is false it will also ignore tracks without metadata\n    // This is used to \"freeze\" the language options when captions.update is false\n    getTracks(update = false) {\n        // Handle media or textTracks missing or null\n        const tracks = Array.from((this.media || {}).textTracks || []);\n        // For HTML5, use cache instead of current tracks when it exists (if captions.update is false)\n        // Filter out removed tracks and tracks that aren't captions/subtitles (for example metadata)\n        return tracks\n            .filter(track => !this.isHTML5 || update || this.captions.meta.has(track))\n            .filter(track => ['captions', 'subtitles'].includes(track.kind));\n    },\n\n    // Match tracks based on languages and get the first\n    findTrack(languages, force = false) {\n        const tracks = captions.getTracks.call(this);\n        const sortIsDefault = track => Number((this.captions.meta.get(track) || {}).default);\n        const sorted = Array.from(tracks).sort((a, b) => sortIsDefault(b) - sortIsDefault(a));\n        let track;\n        languages.every(language => {\n            track = sorted.find(track => track.language === language);\n            return !track; // Break iteration if there is a match\n        });\n        // If no match is found but is required, get first\n        return track || (force ? sorted[0] : undefined);\n    },\n\n    // Get the current track\n    getCurrentTrack() {\n        return captions.getTracks.call(this)[this.currentTrack];\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!is.track(currentTrack) && support.textTracks && this.captions.toggled) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (is.track(currentTrack)) {\n            if (!is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Update captions using current track's active cues\n    // Also optional array argument in case there isn't any track (ex: vimeo)\n    updateCues(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (!is.element(this.elements.captions)) {\n            this.debug.warn('No captions element to render to');\n            return;\n        }\n\n        // Only accept array or empty input\n        if (!is.nullOrUndefined(input) && !Array.isArray(input)) {\n            this.debug.warn('updateCues: Invalid input', input);\n            return;\n        }\n\n        let cues = input;\n\n        // Get cues from track\n        if (!cues) {\n            const track = captions.getCurrentTrack.call(this);\n            cues = Array.from((track || {}).activeCues || [])\n                .map(cue => cue.getCueAsHTML())\n                .map(getHTML);\n        }\n\n        // Set new caption text\n        const content = cues.map(cueText => cueText.trim()).join('\\n');\n        const changed = content !== this.elements.captions.innerHTML;\n\n        if (changed) {\n            // Empty the container and create a new child element\n            emptyElement(this.elements.captions);\n            const caption = createElement('span', getAttributesFromSelector(this.config.selectors.caption));\n            caption.innerHTML = content;\n            this.elements.captions.appendChild(caption);\n\n            // Trigger event\n            triggerEvent.call(this, this.media, 'cuechange');\n        }\n    },\n\n    setPosition(position) {\n        // if already setup correct class name, just ignore\n        if (hasClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'))) {\n            if (position === 'top') return;\n        } else if (position === 'bottom') {\n            return;\n        }\n        toggleClass(this.elements.captions, this.config.classNames.captionPosition.replace('{0}', 'top'));\n\n        // Update settings menu\n        controls.updateSetting.call(this, 'caption-position');\n    },\n\n    setDefault(defaultLanguage = null) {\n        const captionsActive = this.storage.get('captions');\n        const captionsLanguage = this.storage.get('language') || defaultLanguage;\n        // if storage has caption active and,\n        if (\n            (is.boolean(captionsActive) && captionsActive && is.string(captionsLanguage)) ||\n            (!is.boolean(captionsActive) && is.string(captionsLanguage))\n        ) {\n            const tracks = captions.getTracks.call(this, true);\n            const findLanguageList = [captionsLanguage];\n            if (defaultLanguage) {\n                findLanguageList.push(defaultLanguage);\n            }\n            Array.prototype.push.apply(findLanguageList, this.captions.languages);\n            const track = captions.findTrack.call(this, findLanguageList, true);\n            captions.set.call(this, tracks.indexOf(track));\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Allow inline playback on iOS (this effects YouTube/Vimeo - HTML5 requires the attribute present)\n    // TODO: Remove iosNative fullscreen option in favour of this (logic needs work)\n    playsinline: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Reset to start when playback ended\n    resetOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.3.12/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    logo: {\n        url: undefined,\n        link: undefined,\n    },\n\n    // fullscreen container, default is plyr container\n    fullscreenContainer: undefined,\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: 'auto',\n        position: 'bottom',\n        // Listen to new tracks added after Plyr is initialized.\n        // This is needed for streaming captions, but may result in unselectable options\n        update: false,\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'caption-position',\n        'settings',\n        'pip',\n        'airplay',\n        'zoom',\n        'fullscreen',\n    ],\n    settings: ['captions', 'caption-position', 'quality', 'speed'],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime}s',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime}s',\n        seek: 'Seek',\n        seekLabel: '{currentTime} of {duration}',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        enterZoom: 'zoom',\n        exitZoom: 'reset screen size',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        noCaptions: 'No captions',\n        'caption-position': 'Caption Position',\n        'captionPositionLabel': {\n            top: 'Top',\n            bottom: 'Bottom',\n        },\n        settings: 'Settings',\n        menuBack: 'Go back to previous menu',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n        qualityBadge: {\n            2160: '4K',\n            1440: 'HD',\n            1080: 'HD',\n            720: 'HD',\n            576: 'SD',\n            480: 'SD',\n        },\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            sdk: 'https://player.vimeo.com/api/player.js',\n            iframe: 'https://player.vimeo.com/video/{0}?{1}',\n            api: 'https://vimeo.com/api/v2/video/{0}.json',\n        },\n        youtube: {\n            sdk: 'https://www.youtube.com/iframe_api',\n            api:\n                'https://www.googleapis.com/youtube/v3/videos?id={0}&key={1}&fields=items(snippet(title))&part=snippet',\n        },\n        googleIMA: {\n            sdk: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // custom control menu setup function\n    customMenu: {\n        caption: null,\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'enterzoomfullscreen',\n        'exitzoomfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n            layer: {\n                topLayer: '.plyr__controls-top',\n                bottomLayer: '.plyr__controls-bottom',\n            },\n            bottom: {\n                left: '.plyr__controls-bottom-left',\n                right: '.plyr__controls-bottom-right',\n            },\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            zoom: '[data-plyr=\"zoom\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            'caption-position': '[data-plyr=\"caption-position\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress__buffer',\n            loop: '.plyr__progress__loop', // Used later\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        caption: '.plyr__caption',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        embedContainer: 'plyr__video-embed__container',\n        poster: 'plyr__poster',\n        posterEnabled: 'plyr__poster-enabled',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        controlPressed: 'plyr__control--pressed',\n        playing: 'plyr--playing',\n        paused: 'plyr--paused',\n        stopped: 'plyr--stopped',\n        loading: 'plyr--loading',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        logo: 'plyr--logo',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        captionPosition: 'plyr__caption_position__{0}',\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n        outerContainer: 'plyr__outer-container',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\n/**\n * Get provider by URL\n * @param {string} url\n */\nexport function getProviderByUrl(url) {\n    // YouTube\n    if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n        return providers.youtube;\n    }\n\n    // Vimeo\n    if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(url)) {\n        return providers.vimeo;\n    }\n\n    return null;\n}\n\nexport default { providers, types };\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport browser from './utils/browser';\nimport { hasClass, toggleClass, trapFocus } from './utils/elements';\nimport { on, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nfunction onChange(isZoom = false) {\n    if (!this.enabled) {\n        return;\n    }\n\n    if (!isZoom) {\n        // Update toggle button\n        const button = this.player.elements.buttons.fullscreen;\n        if (is.element(button)) {\n            button.pressed = this.active;\n        }\n    } else {\n        const button = this.player.elements.buttons.zoom;\n        if (is.element(button)) {\n            button.pressed = this.zoomActive;\n        }\n    }\n\n    // Trigger an event\n    if (this.isIosNative || !this.isOutterContainerSet) {\n        if (!isZoom) {\n            triggerEvent.call(this.player, this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n        } else {\n            triggerEvent.call(this.player, this.target, this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen', true);\n        }\n    } else {\n        if (!isZoom) {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.active ? 'enterfullscreen' : 'exitfullscreen',\n                true,\n            );\n        } else {\n            triggerEvent.call(\n                this.player,\n                this.player.elements.container,\n                this.zoomActive ? 'enterzoomfullscreen' : 'exitzoomfullscreen',\n                true,\n            );\n        }\n    }\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    if (this.target === this.player.elements.container) {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n    } else {\n        toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.fallback, toggle);\n    }\n\n\n    // Toggle button and fire events\n    onChange.call(this, true);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.property = Fullscreen.property;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        on.call(\n            this.player,\n            document,\n            this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`,\n            () => {\n                // TODO: Filter for target??\n                onChange.call(this);\n            },\n        );\n\n        // Fullscreen toggle on double click\n        on.call(this.player, this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (is.element(this.player.elements.controls) && this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(\n            document.fullscreenEnabled ||\n            document.webkitFullscreenEnabled ||\n            document.mozFullScreenEnabled ||\n            document.msFullscreenEnabled\n        );\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = ['webkit', 'moz', 'ms'];\n\n        prefixes.some(pre => {\n            if (is.function(document[`${pre}ExitFullscreen`]) || is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get property() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.property}Element`];\n\n        return element === this.target;\n    }\n\n    get zoomActive() {\n        return hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n    }\n\n    get isIosNative() {\n        return browser.isIos && this.player.config.fullscreen.iosNative;\n    }\n\n    get isOutterContainerSet() {\n        return !!this.player.config.fullscreenContainer;\n    }\n\n    // Get target element\n    get target() {\n        if (this.isIosNative) {\n            return this.player.media;\n        } else if (this.isOutterContainerSet) {\n            return this.player.config.fullscreenContainer;\n        }\n        return this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        if (this.zoomActive) {\n            this.toggleZoom();\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.property}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.property}`]();\n        }\n    }\n\n    toggleZoom() {\n        if (!this.zoomActive) {\n            toggleFallback.call(this, true);\n        } else {\n            toggleFallback.call(this, false);\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","import captions from './captions';\nimport controls from './controls';\nimport html5 from './html5';\nimport i18n from './i18n';\nimport { dedupe } from './utils/arrays';\nimport { createElement, emptyElement, getAttributesFromSelector } from './utils/elements';\nimport is from './utils/is';\nimport { extend } from './utils/objects';\n\nconst hahow = {\n    createControls(data) {\n        // Create the container\n        const container = createElement('div', getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        const topLayer = createElement('div', getAttributesFromSelector(this.config.selectors.controls.layer.topLayer));\n        const bottomLayer = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.layer.bottomLayer),\n        );\n        const bottomLeft = createElement('div', getAttributesFromSelector(this.config.selectors.controls.bottom.left));\n        const bottomRight = createElement(\n            'div',\n            getAttributesFromSelector(this.config.selectors.controls.bottom.right),\n        );\n\n        bottomLayer.appendChild(bottomLeft);\n        bottomLayer.appendChild(bottomRight);\n        container.appendChild(topLayer);\n        container.appendChild(bottomLayer);\n\n        // Rewind button\n        bottomLeft.appendChild(controls.createButton.call(this, 'rewind'));\n\n        // Play/Pause button\n        bottomLeft.appendChild(controls.createButton.call(this, 'play'));\n\n        // Fast forward button\n        bottomLeft.appendChild(controls.createButton.call(this, 'fast-forward'));\n\n        // Progress\n        const progress = createElement('div', getAttributesFromSelector(this.config.selectors.progress));\n\n        // Seek range slider\n        progress.appendChild(\n            controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            }),\n        );\n\n        // Buffer progress\n        progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n        // TODO: Add loop display indicator\n\n        // Seek tooltip\n        if (this.config.tooltips.seek) {\n            const tooltip = createElement(\n                'span',\n                {\n                    class: this.config.classNames.tooltip,\n                },\n                '00:00',\n            );\n\n            progress.appendChild(tooltip);\n            this.elements.display.seekTooltip = tooltip;\n        }\n\n        this.elements.progress = progress;\n        topLayer.appendChild(this.elements.progress);\n\n        // Media current time display\n        bottomLeft.appendChild(controls.createTime.call(this, 'currentTime'));\n\n        // Media duration display\n        bottomLeft.appendChild(controls.createTime.call(this, 'duration'));\n\n        // Add lecture note button\n        const addLecturneNoteBtn = controls.createButton.call(this, 'add-lecture-note', {\n            class: 'plyr__add-lecture-note hidden',\n        });\n        addLecturneNoteBtn.appendChild(createElement('span', {}, '筆記標註'));\n        bottomRight.appendChild(addLecturneNoteBtn);\n\n        addLecturneNoteBtn.addEventListener('click', (e) => {\n            this.lectureNote.addLectureNote();\n            e.stopPropagation();\n        });\n\n        // Toggle mute button\n        bottomRight.appendChild(controls.createButton.call(this, 'mute'));\n\n        // Volume range control\n        const volume = createElement('div', {\n            class: 'plyr__volume',\n        });\n\n        // Set the attributes\n        const attributes = {\n            max: 1,\n            step: 0.05,\n            value: this.config.volume,\n        };\n\n        // Create the volume range slider\n        volume.appendChild(\n            controls.createRange.call(\n                this,\n                'volume',\n                extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            ),\n        );\n\n        this.elements.volume = volume;\n\n        bottomRight.appendChild(volume);\n\n        // Settings button / menu\n        const menu = createElement('div', {\n            class: 'plyr__menu',\n            hidden: '',\n        });\n\n        menu.appendChild(\n            controls.createButton.call(this, 'settings', {\n                id: `plyr-settings-toggle-${data.id}`,\n                'aria-haspopup': true,\n                'aria-controls': `plyr-settings-${data.id}`,\n                'aria-expanded': false,\n            }),\n        );\n\n        const form = createElement('form', {\n            class: 'plyr__menu__container',\n            id: `plyr-settings-${data.id}`,\n            hidden: '',\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tablist',\n            tabindex: -1,\n        });\n\n        const inner = createElement('div');\n\n        const home = createElement('div', {\n            id: `plyr-settings-${data.id}-home`,\n            'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n            role: 'tabpanel',\n        });\n\n        // Create the tab list\n        const tabs = createElement('ul', {\n            role: 'tablist',\n        });\n\n        // Build the tabs\n        this.config.settings.forEach(type => {\n            const tab = createElement('li', {\n                role: 'tab',\n                hidden: '',\n            });\n\n            const button = createElement(\n                'button',\n                extend(getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                    id: `plyr-settings-${data.id}-${type}-tab`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-${type}`,\n                    'aria-expanded': false,\n                }),\n                i18n.get(type, this.config),\n            );\n\n            const value = createElement('span', {\n                class: this.config.classNames.menu.value,\n            });\n\n            // Speed contains HTML entities\n            value.innerHTML = data[type];\n\n            button.appendChild(value);\n            tab.appendChild(button);\n            tabs.appendChild(tab);\n\n            this.elements.settings.tabs[type] = tab;\n        });\n\n        home.appendChild(tabs);\n        inner.appendChild(home);\n\n        // Build the panes\n        this.config.settings.forEach(type => {\n            const pane = createElement('div', {\n                id: `plyr-settings-${data.id}-${type}`,\n                class: 'subpanel',\n                hidden: '',\n                'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                role: 'tabpanel',\n                tabindex: -1,\n            });\n\n            const back = createElement(\n                'button',\n                {\n                    type: 'button',\n                    class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}-home`,\n                    'aria-expanded': false,\n                },\n                i18n.get(type, this.config),\n            );\n\n            pane.appendChild(back);\n\n            const options = createElement('ul');\n\n            pane.appendChild(options);\n            inner.appendChild(pane);\n\n            this.elements.settings.panes[type] = pane;\n        });\n\n        form.appendChild(inner);\n        menu.appendChild(form);\n        bottomRight.appendChild(menu);\n\n        this.elements.settings.form = form;\n        this.elements.settings.menu = menu;\n\n        bottomRight.appendChild(controls.createButton.call(this, 'zoom'));\n\n        // Toggle fullscreen button\n        bottomRight.appendChild(controls.createButton.call(this, 'fullscreen'));\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            hahow.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        hahow.setSpeedMenu.call(this);\n        hahow.setCaptionsMenu.call(this);\n        hahow.setCaptionsPositionMenu.call(this);\n\n        return container;\n    },\n\n    // Set the quality menu\n    setQualityMenu(options) {\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on uniqueness and config\n        if (is.array(options)) {\n            this.options.quality = dedupe(options);\n        }\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => a - b)\n            .forEach(quality => {\n                controls.createMenuItem.call(this, {\n                    value: quality,\n                    list,\n                    type,\n                    title: controls.getLabel.call(this, 'quality', quality),\n                });\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.captions)) {\n            return;\n        }\n\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n        const tracks = captions.getTracks.call(this);\n\n        // Toggle the pane and tab\n        controls.toggleTab.call(this, type, true);\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!tracks.length) {\n            controls.createMenuItem.bind(this)({\n                value: -1,\n                checked: !this.captions.toggled,\n                title: i18n.get('noCaptions', this.config),\n                list,\n                type: 'language',\n            });\n            controls.updateSetting.call(this, type, list);\n            return;\n        }\n\n        // Generate options data\n        const options = tracks.map((track, value) => ({\n            value,\n            checked: this.captions.toggled && this.currentTrack === value,\n            title: captions.getLabel.call(this, track),\n            badge: track.language && controls.createBadge.call(this, track.language.toUpperCase()),\n            list,\n            type: 'language',\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        options.unshift({\n            value: -1,\n            checked: !this.captions.toggled,\n            title: i18n.get('disabled', this.config),\n            list,\n            type: 'language',\n        });\n\n        // Generate options\n        options.forEach(controls.createMenuItem.bind(this));\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    setCaptionsPositionMenu() {\n        if (!is.element(this.elements.settings.panes['caption-position'])) {\n            return;\n        }\n\n        const type = 'caption-position';\n\n        controls.toggleTab.call(this, type, true);\n\n        // Get the list to populate\n        const list = this.elements.settings.panes['caption-position'].querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        const positions = ['top', 'bottom'];\n\n        // Create items\n        positions.forEach(position => {\n            controls.createMenuItem.call(this, {\n                value: position,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'caption-position', position),\n            });\n        });\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Menu required\n        if (!is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [0.5, 0.75, 1, 1.25, 1.5, 1.75, 2];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Empty the menu\n        emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            controls.createMenuItem.call(this, {\n                value: speed,\n                list,\n                type,\n                title: controls.getLabel.call(this, 'speed', speed),\n            });\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n};\n\nexport default hahow;\n","// ==========================================================================\n// Load image avoiding xhr/fetch CORS issues\n// Server status can't be obtained this way unfortunately, so this uses \"naturalWidth\" to determine if the image has loaded\n// By default it checks if it is at least 1px, but you can add a second argument to change this\n// ==========================================================================\n\nexport default function loadImage(src, minWidth = 1) {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n\n        const handler = () => {\n            delete image.onload;\n            delete image.onerror;\n            (image.naturalWidth >= minWidth ? resolve : reject)(image);\n        };\n\n        Object.assign(image, { onload: handler, onerror: handler, src });\n    });\n}\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\nimport support from './support';\nimport browser from './utils/browser';\nimport { getElement, toggleClass } from './utils/elements';\nimport { ready, triggerEvent } from './utils/events';\nimport is from './utils/is';\nimport loadImage from './utils/loadImage';\n\nconst ui = {\n    addStyleHook() {\n        toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    addStylehookToFullscreenContainer () {\n        // append plyr__outer-container class name to outer container\n        if (this.config.fullscreenContainer) {\n            toggleClass(this.config.fullscreenContainer, this.config.classNames.outerContainer, true);\n        }\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            this.ready = true;\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Setup captions for HTML5\n        if (this.isHTML5) {\n            captions.setup.call(this);\n        }\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        controls.updateVolume.call(this);\n\n        // Reset time display\n        controls.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Check for picture-in-picture support\n        toggleClass(\n            this.elements.container,\n            this.config.classNames.pip.supported,\n            support.pip && this.isHTML5 && this.isVideo,\n        );\n\n        // Check for airplay support\n        toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n        // Add iOS class\n        toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n        // Add touch class\n        toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            triggerEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n\n        // Assure the poster image is set, if the property was added before the element was created\n        if (this.poster) {\n            ui.setPoster.call(this, this.poster, false).catch(() => {});\n        }\n\n        // Manually set the duration if user has overridden it.\n        // The event listeners for it doesn't get called if preload is disabled (#701)\n        if (this.config.duration) {\n            controls.durationUpdate.call(this);\n        }\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (is.string(this.config.title) && !is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n        }\n\n        // If there's a play button, set label\n        Array.from(this.elements.buttons.play || []).forEach(button => {\n            button.setAttribute('aria-label', label);\n        });\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = getElement.call(this, 'iframe');\n\n            if (!is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !is.empty(this.config.title) ? this.config.title : 'video';\n            const format = i18n.get('frameTitle', this.config);\n\n            iframe.setAttribute('title', format.replace('{title}', title));\n        }\n    },\n\n    // Toggle poster\n    togglePoster(enable) {\n        toggleClass(this.elements.container, this.config.classNames.posterEnabled, enable);\n    },\n\n    // Set the poster image (async)\n    // Used internally for the poster setter, with the passive option forced to false\n    setPoster(poster, passive = true) {\n        // Don't override if call is passive\n        if (passive && this.poster) {\n            return Promise.reject(new Error('Poster already set'));\n        }\n\n        // Set property synchronously to respect the call order\n        this.media.setAttribute('poster', poster);\n\n        // Wait until ui is ready\n        return (\n            ready\n                .call(this)\n                // Load image\n                .then(() => loadImage(poster))\n                .catch(err => {\n                    // Hide poster on error unless it's been set by another call\n                    if (poster === this.poster) {\n                        ui.togglePoster.call(this, false);\n                    }\n                    // Rethrow\n                    throw err;\n                })\n                .then(() => {\n                    // Prevent race conditions\n                    if (poster !== this.poster) {\n                        throw new Error('setPoster cancelled by later call to setPoster');\n                    }\n                })\n                .then(() => {\n                    Object.assign(this.elements.poster.style, {\n                        backgroundImage: `url('${poster}')`,\n                        // Reset backgroundSize as well (since it can be set to \"cover\" for padded thumbnails for youtube)\n                        backgroundSize: '',\n                    });\n                    ui.togglePoster.call(this, true);\n                    return poster;\n                })\n        );\n    },\n\n    // Check playing state\n    checkPlaying(event) {\n        // Class hooks\n        toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        toggleClass(this.elements.container, this.config.classNames.paused, this.paused);\n        toggleClass(this.elements.container, this.config.classNames.stopped, this.stopped);\n\n        // Set state\n        Array.from(this.elements.buttons.play || []).forEach(target => {\n            target.pressed = this.playing;\n        });\n\n        // Only update controls on non timeupdate events\n        if (is.event(event) && event.type === 'timeupdate') {\n            return;\n        }\n\n        // Toggle controls\n        ui.toggleControls.call(this);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = ['stalled', 'waiting'].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Update progress bar loading class state\n            toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Update controls visibility\n            ui.toggleControls.call(this);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Toggle controls based on state and `force` argument\n    toggleControls(force) {\n        const { controls } = this.elements;\n\n        if (controls && this.config.hideControls) {\n            // Show controls if force, loading, paused, or button interaction, otherwise hide\n            this.toggleControls(Boolean(force || this.loading || this.paused || controls.pressed || controls.hover));\n        }\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport controls from './controls';\nimport ui from './ui';\nimport browser from './utils/browser';\nimport { getElement, getElements, getFocusElement, matches, toggleClass, toggleHidden } from './utils/elements';\nimport { on, once, toggleListener, triggerEvent } from './utils/events';\nimport is from './utils/is';\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [27, 32, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 67, 70, 73, 75, 76, 77, 79];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = getFocusElement();\n            if (\n                is.element(focused) &&\n                (focused !== this.player.elements.inputs.seek &&\n                    matches(focused, this.player.config.selectors.editable))\n            ) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 27:\n                    // esc escape fullscreen mode\n                    if (this.player.fullscreen.enabled) {\n                        this.player.fullscreen.exit();\n                    }\n                    break;\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                case 78:\n                    // N key\n                    if (this.player.lectureNote && this.player.lectureNote.isLoadedLectureNote && this.player.lectureNote.addLectureNoteButtonStatus === 'enable') {\n                        this.player.lectureNote.addLectureNote();\n                    }\n                    break;\n\n                    /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            toggleListener.call(this.player, window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        toggleListener.call(this.player, document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        once.call(this.player, document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            on.call(this.player, this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        on.call(this.player, this.player.elements.container, 'focusout', event => {\n            toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n        // Add classname to tabbed elements\n        on.call(this.player, this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                toggleClass(getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls on mouse events and entering fullscreen\n        on.call(\n            this.player,\n            this.player.elements.container,\n            'mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen',\n            event => {\n                const { controls } = this.player.elements;\n\n                // Remove button states for fullscreen\n                if (event.type === 'enterfullscreen') {\n                    controls.pressed = false;\n                    controls.hover = false;\n                }\n\n                // Show, then hide after a timeout unless another control event occurs\n                const show = ['touchstart', 'touchmove', 'mousemove'].includes(event.type);\n\n                let delay = 0;\n\n                if (show) {\n                    ui.toggleControls.call(this.player, true);\n                    // Use longer timeout for touch devices\n                    delay = this.player.touch ? 3000 : 2000;\n                }\n\n                // Clear timer\n                clearTimeout(this.player.timers.controls);\n                // Timer to prevent flicker when seeking\n                this.player.timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            },\n        );\n    }\n\n    // Listen for media events\n    media() {\n        if (!this.player.media.isAlreadyRegisterEventListener) {\n            this.player.media.isAlreadyRegisterEventListener = true;\n            // Time change on media\n            on.call(this.player, this.player.media, 'timeupdate seeking seeked', event =>\n                controls.timeUpdate.call(this.player, event),\n            );\n\n            // Display duration\n            on.call(this.player, this.player.media, 'durationchange loadeddata loadedmetadata', event =>\n                controls.durationUpdate.call(this.player, event),\n            );\n\n            // Check for audio tracks on load\n            // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n            on.call(this.player, this.player.media, 'canplay', () => {\n                toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n                toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n            });\n\n            // Handle the media finishing\n            on.call(this.player, this.player.media, 'ended', () => {\n                // Show poster on end\n                if (this.player.isHTML5 && this.player.isVideo && this.player.config.resetOnEnd) {\n                    // Restart\n                    this.player.restart();\n                }\n            });\n\n            // Check for buffer progress\n            on.call(this.player, this.player.media, 'progress playing seeking seeked', event =>\n                controls.updateProgress.call(this.player, event),\n            );\n\n            // Handle volume changes\n            on.call(this.player, this.player.media, 'volumechange', event =>\n                controls.updateVolume.call(this.player, event),\n            );\n\n            // Handle play/pause\n            on.call(this.player, this.player.media, 'playing play pause ended emptied timeupdate', event =>\n                ui.checkPlaying.call(this.player, event),\n            );\n\n            // Loading state\n            on.call(this.player, this.player.media, 'waiting canplay seeked playing', event =>\n                ui.checkLoading.call(this.player, event),\n            );\n\n            // If autoplay, then load advertisement if required\n            // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n            on.call(this.player, this.player.media, 'playing', () => {\n                if (!this.player.ads) {\n                    return;\n                }\n\n                // If ads are enabled, wait for them first\n                if (this.player.ads.enabled && !this.player.ads.initialized) {\n                    // Wait for manager response\n                    this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n                }\n            });\n\n            // Volume change\n            on.call(this.player, this.player.media, 'volumechange', () => {\n                // Save to storage\n                this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n            });\n\n            // Speed change\n            on.call(this.player, this.player.media, 'ratechange', () => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'speed');\n\n                // Save to storage\n                this.player.storage.set({ speed: this.player.speed });\n            });\n\n            // Quality change\n            on.call(this.player, this.player.media, 'qualitychange', event => {\n                // Update UI\n                controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n            });\n\n            // Proxy events to container\n            // Bubble up key events for Edge\n            const proxyEvents = this.player.config.events.concat(['keyup', 'keydown']).join(' ');\n            on.call(this.player, this.player.media, proxyEvents, event => {\n                let { detail = {} } = event;\n\n                // Get error details from media\n                if (event.type === 'error') {\n                    detail = this.player.media.error;\n                }\n\n                triggerEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n            });\n        }\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!is.element(wrapper)) {\n                return;\n            }\n\n            if (!wrapper.isAlreadyRegisterEventListener) {\n                wrapper.isAlreadyRegisterEventListener = true;\n                // On click play, pause ore restart\n                on.call(this.player, wrapper, 'click', () => {\n                    if (this.player.paused) {\n                        this.player.play();\n                    } else if (this.player.ended) {\n                        this.player.restart();\n                        this.player.play();\n                    } else {\n                        this.player.pause();\n                    }\n                });\n\n                // Disable right click\n                if (this.player.supported.ui && this.player.config.disableContextMenu) {\n                    on.call(\n                        this.player,\n                        this.player.elements.wrapper,\n                        'contextmenu',\n                        event => {\n                            event.preventDefault();\n                        },\n                        false,\n                    );\n                }\n            }\n        }\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const bind = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = is.function(customHandler);\n\n            on.call(\n                this.player,\n                element,\n                type,\n                event => proxy(event, defaultHandler, customHandlerKey),\n                passive && !hasCustomHandler,\n            );\n        };\n\n        // Play/pause toggle\n        if (this.player.elements.buttons.play) {\n            Array.from(this.player.elements.buttons.play).forEach(button => {\n                bind(button, 'click', this.player.togglePlay, 'play');\n            });\n        }\n\n        // Pause\n        bind(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        bind(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        bind(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        bind(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        bind(this.player.elements.buttons.captions, 'click', () => this.player.toggleCaptions());\n\n        // zoom toggle\n        on(\n            this.player.elements.buttons.zoom,\n            'click',\n            () => {\n                this.player.fullscreen.toggleZoom();\n            },\n            'zoom',\n        );\n\n        // Fullscreen toggle\n        bind(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        bind(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        bind(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        bind(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        bind(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Go back to home tab on click\n            const showHomeTab = () => {\n                const id = `plyr-settings-${this.player.id}-home`;\n                controls.showTab.call(this.player, id);\n            };\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.currentTrack = Number(event.target.value);\n                        // showHomeTab();\n                    },\n                    'language',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                        // showHomeTab();\n                    },\n                    'quality',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                        // showHomeTab();\n                    },\n                    'speed',\n                );\n            } else if (matches(event.target, this.player.config.selectors.inputs['caption-position'])) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.captionPosition = event.target.value;\n                    },\n                    'caption-position',\n                );\n            } else {\n                const tab = event.target;\n                controls.showTab.call(this.player, tab.getAttribute('aria-controls'));\n            }\n        });\n\n        // Set range input alternative \"value\", which matches the tooltip time (#954)\n        bind(this.player.elements.inputs.seek, 'mousedown mousemove', event => {\n            const clientRect = this.player.elements.progress.getBoundingClientRect();\n            const percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n            event.currentTarget.setAttribute('seek-value', percent);\n        });\n\n        // Pause while seeking\n        bind(this.player.elements.inputs.seek, 'mousedown mouseup keydown keyup touchstart touchend', event => {\n            const seek = event.currentTarget;\n\n            const code = event.keyCode ? event.keyCode : event.which;\n            const eventType = event.type;\n\n            if ((eventType === 'keydown' || eventType === 'keyup') && (code !== 39 && code !== 37)) {\n                return;\n            }\n            // Was playing before?\n            const play = seek.hasAttribute('play-on-seeked');\n\n            // Done seeking\n            const done = ['mouseup', 'touchend', 'keyup'].includes(event.type);\n\n            // If we're done seeking and it was playing, resume playback\n            if (play && done) {\n                seek.removeAttribute('play-on-seeked');\n                this.player.play();\n            } else if (!done && this.player.playing) {\n                seek.setAttribute('play-on-seeked', '');\n                this.player.pause();\n            }\n        });\n\n        // Seek\n        bind(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                const seek = event.currentTarget;\n\n                // If it exists, use seek-value instead of \"value\" for consistency with tooltip time (#954)\n                let seekTo = seek.getAttribute('seek-value');\n\n                if (is.empty(seekTo)) {\n                    seekTo = seek.value;\n                }\n\n                seek.removeAttribute('seek-value');\n\n                this.player.currentTime = seekTo / seek.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !is.element(this.player.elements.display.duration)) {\n            bind(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n\n                controls.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        bind(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            Array.from(getElements.call(this.player, 'input[type=\"range\"]')).forEach(element => {\n                bind(element, 'input', event => controls.updateRangeFill.call(this.player, event.target));\n            });\n        }\n\n        // Seek tooltip\n        bind(this.player.elements.progress, 'mouseenter mouseleave mousemove', event =>\n            controls.updateSeekTooltip.call(this.player, event),\n        );\n\n        // Update controls.hover state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mouseenter mouseleave', event => {\n            this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n        });\n\n        // Update controls.pressed state (used for ui.toggleControls to avoid hiding when interacting)\n        bind(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n            this.player.elements.controls.pressed = ['mousedown', 'touchstart'].includes(event.type);\n        });\n\n        // Focus in/out on controls\n        bind(this.player.elements.controls, 'focusin focusout', event => {\n            const { config, elements, timers } = this.player;\n\n            // Skip transition to prevent focus from scrolling the parent element\n            toggleClass(elements.controls, config.classNames.noTransition, event.type === 'focusin');\n\n            // Toggle\n            ui.toggleControls.call(this.player, event.type === 'focusin');\n\n            // If focusin, hide again after delay\n            if (event.type === 'focusin') {\n                // Restore transition\n                setTimeout(() => {\n                    toggleClass(elements.controls, config.classNames.noTransition, false);\n                }, 0);\n\n                // Delay a little more for keyboard users\n                const delay = this.touch ? 3000 : 4000;\n\n                // Clear timer\n                clearTimeout(timers.controls);\n                // Hide\n                timers.controls = setTimeout(() => ui.toggleControls.call(this.player, false), delay);\n            }\n        });\n\n        // Mouse wheel for volume\n        bind(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n\n                // Get delta from event. Invert if `inverted` is true\n                const [x, y] = [event.deltaX, -event.deltaY].map(value => (inverted ? -value : value));\n\n                // Using the biggest delta, normalize to 1 or -1 (or 0 if no delta)\n                const direction = Math.sign(Math.abs(x) > Math.abs(y) ? x : y);\n\n                // Change the volume by 2%\n                this.player.increaseVolume(direction / 50);\n\n                // Don't break page scrolling at max and min\n                const { volume } = this.player.media;\n                if ((direction === 1 && volume < 1) || (direction === -1 && volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n}\n\nexport default Listeners;\n","import { setAttributes, toggleClass } from './utils/elements';\n\nconst logo = {\n    setup() {\n        // add custom logo\n        if (this.config.logo && this.config.logo.url) {\n            // build logo container\n            const logoContainer = document.createElement('div');\n            toggleClass(logoContainer, this.config.classNames.logo, true);\n\n            // image put into logo container if link not present\n            let imageContainer = logoContainer;\n\n            if (this.config.logo.link) {\n                // if logo.link setup, put image into a\n                const linkElement = document.createElement('a');\n                setAttributes(linkElement, {\n                    href: this.config.logo.link,\n                });\n                logoContainer.appendChild(linkElement);\n                imageContainer = linkElement;\n            }\n\n            // build logo image\n            const logoElement = document.createElement('img');\n            setAttributes(logoElement, {\n                src: this.config.logo.url,\n            });\n            imageContainer.appendChild(logoElement);\n            this.elements.container.appendChild(logoContainer);\n        }\n    },\n};\n\nexport default logo;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Load an external script\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nexport default function loadScript(url) {\n    return new Promise((resolve, reject) => {\n        loadjs(url, {\n            success: resolve,\n            error: reject,\n        });\n    });\n}\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport captions from '../captions';\nimport controls from '../controls';\nimport ui from '../ui';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { format, stripHTML } from '../utils/strings';\nimport { buildUrlParams } from '../utils/urls';\n\n// Parse Vimeo ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    if (is.number(Number(url))) {\n        return url;\n    }\n\n    const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Get aspect ratio for dimensions\nfunction getAspectRatio(width, height) {\n    const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n    const ratio = getRatio(width, height);\n    return `${width / ratio}:${height / ratio}`;\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!is.object(window.Vimeo)) {\n            loadScript(this.config.urls.vimeo.sdk)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const [x, y] = (is.string(input) ? input : this.config.ratio).split(':');\n        const padding = 100 / x * y;\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            // muted: player.muted,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n        };\n        const params = buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(player.config.attributes.embed.id);\n        }\n\n        const id = parseId(source);\n\n        // Build an iframe\n        const iframe = createElement('iframe');\n        const src = format(player.config.urls.vimeo.iframe, id, params);\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Inject the package\n        const wrapper = createElement('div', { poster, class: player.config.classNames.embedContainer });\n        wrapper.appendChild(iframe);\n        player.media = replaceElement(wrapper, player.media);\n\n        // Get poster image\n        fetch(format(player.config.urls.vimeo.api, id), 'json').then(response => {\n            if (is.empty(response)) {\n                return;\n            }\n\n            // Get the URL for thumbnail\n            const url = new URL(response[0].thumbnail_large);\n\n            // Get original image\n            url.pathname = `${url.pathname.split('_')[0]}.jpg`;\n\n            // Set and show poster\n            ui.setPoster.call(player, url.href).catch(() => {});\n        });\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe, {\n            autopause: player.config.autopause,\n            muted: player.muted,\n        });\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            assurePlaybackState.call(player, true);\n            return player.embed.play();\n        };\n\n        player.media.pause = () => {\n            assurePlaybackState.call(player, false);\n            return player.embed.pause();\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Vimeo will automatically play on seek if the video hasn't been played before\n\n                // Get current paused state and volume etc\n                const { embed, media, paused, volume } = player;\n                const restorePause = paused && !embed.hasPlayed;\n\n                // Set seeking state and trigger event\n                media.seeking = true;\n                triggerEvent.call(player, media, 'seeking');\n\n                // If paused, mute until seek is complete\n                Promise.resolve(restorePause && embed.setVolume(0))\n                    // Seek\n                    .then(() => embed.setCurrentTime(time))\n                    // Restore paused\n                    .then(() => restorePause && embed.pause())\n                    // Restore volume\n                    .then(() => restorePause && embed.setVolume(volume))\n                    .catch(() => {\n                        // Do nothing\n                    });\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        triggerEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    triggerEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([player.embed.getVideoWidth(), player.embed.getVideoHeight()]).then(dimensions => {\n            const ratio = getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            triggerEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', ({ cues = [] }) => {\n            const strippedCues = cues.map(cue => stripHTML(cue.text));\n            captions.updateCues.call(player, strippedCues);\n        });\n\n        player.embed.on('loaded', () => {\n            // Assure state and events are updated on autoplay\n            player.embed.getPaused().then(paused => {\n                assurePlaybackState.call(player, !paused);\n                if (!paused) {\n                    triggerEvent.call(player, player.media, 'playing');\n                }\n            });\n\n            if (is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            assurePlaybackState.call(player, true);\n            triggerEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            assurePlaybackState.call(player, false);\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            triggerEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            triggerEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                triggerEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    triggerEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            triggerEvent.call(player, player.media, 'seeked');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            triggerEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            triggerEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport controls from '../controls';\nimport ui from '../ui';\nimport { dedupe } from '../utils/arrays';\nimport { createElement, replaceElement, toggleClass } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport fetch from '../utils/fetch';\nimport is from '../utils/is';\nimport loadImage from '../utils/loadImage';\nimport loadScript from '../utils/loadScript';\nimport { format, generateId } from '../utils/strings';\n\n// Parse YouTube ID from URL\nfunction parseId(url) {\n    if (is.empty(url)) {\n        return null;\n    }\n\n    const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    return url.match(regex) ? RegExp.$2 : url;\n}\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    const qualities = {\n        hd2160: 2160,\n        hd1440: 1440,\n        hd1080: 1080,\n        hd720: 720,\n        large: 480,\n        medium: 360,\n        small: 240,\n        tiny: 144,\n    };\n\n    const entry = Object.entries(qualities).find(entry => entry.includes(input));\n\n    if (entry) {\n        // Get the match corresponding to the input\n        return entry.find(value => value !== input);\n    }\n\n    return 'default';\n}\n\nfunction mapQualityUnits(levels) {\n    if (is.empty(levels)) {\n        return levels;\n    }\n\n    return dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\n// Set playback state and trigger change (only on actual change)\nfunction assurePlaybackState(play) {\n    if (play && !this.embed.hasPlayed) {\n        this.embed.hasPlayed = true;\n    }\n    if (this.media.paused === play) {\n        this.media.paused = !play;\n        triggerEvent.call(this, this.media, play ? 'play' : 'pause');\n    }\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (is.object(window.YT) && is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            loadScript(this.config.urls.youtube.sdk).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (is.string(key) && !is.empty(key)) {\n            const url = format(this.config.urls.youtube.api, videoId, key);\n\n            fetch(url)\n                .then(result => {\n                    if (is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = parseId(source);\n        const id = generateId(player.provider);\n\n        // Get poster, if already set\n        const { poster } = player;\n\n        // Replace media element\n        const container = createElement('div', { id, poster });\n        player.media = replaceElement(container, player.media);\n\n        // Id to poster wrapper\n        const posterSrc = format => `https://img.youtube.com/vi/${videoId}/${format}default.jpg`;\n\n        // Check thumbnail images in order of quality, but reject fallback thumbnails (120px wide)\n        loadImage(posterSrc('maxres'), 121) // Higest quality and unpadded\n            .catch(() => loadImage(posterSrc('sd'), 121)) // 480p padded 4:3\n            .catch(() => loadImage(posterSrc('hq'))) // 360p padded 4:3. Always exists\n            .then(image => ui.setPoster.call(player, image.src))\n            .then(posterSrc => {\n                // If the image is padded, use background-size \"cover\" instead (like youtube does too with their posters)\n                if (!posterSrc.includes('maxres')) {\n                    player.elements.poster.style.backgroundSize = 'cover';\n                }\n            })\n            .catch(() => {});\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                hl: player.config.hl, // iframe interface language\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // YouTube may fire onError twice, so only handle it once\n                    if (!player.media.error) {\n                        const code = event.data;\n                        // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                        const message =\n                            {\n                                2: 'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.',\n                                5: 'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.',\n                                100: 'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.',\n                                101: 'The owner of the requested video does not allow it to be played in embedded players.',\n                                150: 'The owner of the requested video does not allow it to be played in embedded players.',\n                            }[code] || 'An unknown error occured';\n\n                        player.media.error = { code, message };\n\n                        triggerEvent.call(player, player.media, 'error');\n                    }\n                },\n                onPlaybackQualityChange() {\n                    triggerEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    triggerEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Bail if onReady has already been called. See issue #1108\n                    if (is.function(player.media.play)) {\n                        return;\n                    }\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        assurePlaybackState.call(player, true);\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        assurePlaybackState.call(player, false);\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // If paused and never played, mute audio preventively (YouTube starts playing on seek if the video hasn't been played yet).\n                            if (player.paused && !player.embed.hasPlayed) {\n                                player.embed.mute();\n                            }\n\n                            // Set seeking state and trigger event\n                            player.media.seeking = true;\n                            triggerEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            instance.setPlaybackQuality(mapQualityUnit(input));\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            triggerEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    triggerEvent.call(player, player.media, 'timeupdate');\n                    triggerEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            triggerEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            triggerEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    const seeked = player.media.seeking && [1, 2].includes(event.data);\n\n                    if (seeked) {\n                        // Unset seeking and fire seeked event\n                        player.media.seeking = false;\n                        triggerEvent.call(player, player.media, 'seeked');\n                    }\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            triggerEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            triggerEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            assurePlaybackState.call(player, false);\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                triggerEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // Restore paused state (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (player.media.paused && !player.embed.hasPlayed) {\n                                player.media.pause();\n                            } else {\n                                assurePlaybackState.call(player, true);\n\n                                triggerEvent.call(player, player.media, 'playing');\n\n                                // Poll to get playback progress\n                                player.timers.playing = setInterval(() => {\n                                    triggerEvent.call(player, player.media, 'timeupdate');\n                                }, 50);\n\n                                // Check duration again due to YouTube bug\n                                // https://github.com/sampotts/plyr/issues/374\n                                // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                                if (player.media.duration !== instance.getDuration()) {\n                                    player.media.duration = instance.getDuration();\n                                    triggerEvent.call(player, player.media, 'durationchange');\n                                }\n\n                                // Get quality\n                                controls.setQualityMenu.call(\n                                    player,\n                                    mapQualityUnits(instance.getAvailableQualityLevels()),\n                                );\n                            }\n\n                            break;\n\n                        case 2:\n                            // Restore audio (YouTube starts playing on seek if the video hasn't been played yet)\n                            if (!player.muted) {\n                                player.embed.unMute();\n                            }\n                            assurePlaybackState.call(player, false);\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    triggerEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport html5 from './html5';\nimport vimeo from './plugins/vimeo';\nimport youtube from './plugins/youtube';\nimport { createElement, toggleClass, wrap } from './utils/elements';\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            wrap(this.media, this.elements.wrapper);\n\n            // Faux poster container\n            this.elements.poster = createElement('div', {\n                class: this.config.classNames.poster,\n            });\n\n            this.elements.wrapper.appendChild(this.elements.poster);\n        }\n\n        if (this.isHTML5) {\n            html5.extend.call(this);\n        } else if (this.isYouTube) {\n            youtube.setup.call(this);\n        } else if (this.isVimeo) {\n            vimeo.setup.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport i18n from '../i18n';\nimport { createElement } from '../utils/elements';\nimport { triggerEvent } from '../utils/events';\nimport is from '../utils/is';\nimport loadScript from '../utils/loadScript';\nimport { formatTime } from '../utils/time';\nimport { buildUrlParams } from '../utils/urls';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    get enabled() {\n        return (\n            this.player.isHTML5 && this.player.isVideo && this.player.config.ads.enabled && !is.empty(this.publisherId)\n        );\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!is.object(window.google) || !is.object(window.google.ima)) {\n                loadScript(this.player.config.urls.googleIMA.sdk)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: window.location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(\n                google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,\n                event => this.onAdsManagerLoaded(event),\n                false,\n            );\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            // Mute based on current state\n            request.setAdWillPlayMuted(!this.player.muted);\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.player.debug.warn(this.manager.getAdSkippableState());\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            triggerEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","import { createElement, getElement, toggleClass } from '../utils/elements';\nimport {triggerEvent} from '../utils/events';\n\nimport controls from '../controls';\n\nexport class LectureNoteModel {\n    constructor () {\n        this.showStatus = LectureNoteModel.ShowStatus.Edit;\n        this.noteStatus = LectureNoteModel.NoteStatus.Create;\n        this.time = 0;\n        this.note = '';\n    }\n}\n\nLectureNoteModel.ShowStatus = {\n    Edit: 'Edit',\n    Hide: 'Hide',\n};\nLectureNoteModel.NoteStatus = {\n    Create: 'Create',\n    Normal: 'Normal',\n};\n\nconst AddLectureNoteButtonStatus = {\n    Enable: 'enable',\n    Disable: 'disable',\n    Hidden: 'hidden',\n};\n\nexport default class LectureNote {\n\n    constructor (player) {\n        this.player = player;\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.isLoadedLectureNote = false;\n\n        this.beforeAddLectureNotePlayerState = null;\n        this.beforeEditLectureNotePlayerState = null;\n    }\n\n    setup () {\n    }\n\n    clear () {\n        this.lectureNoteList = [];\n        this.lectureNoteContainer = null;\n        this.isLoadedLectureNote = false;\n        this.hiddenLectureNote();\n    }\n\n    enableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Enable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    disableLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Disable;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    hiddenLectureNote () {\n        this.addLectureNoteButtonStatus = AddLectureNoteButtonStatus.Hidden;\n        this.updateAddLectureNoteButtonUI();\n    }\n\n    updateAddLectureNoteButtonUI () {\n        const addLectureNoteButton = getElement.call(this.player, '.plyr__add-lecture-note');\n        switch (this.addLectureNoteButtonStatus) {\n            case AddLectureNoteButtonStatus.Enable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', false);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Disable:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', false);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', false);\n                break;\n            case AddLectureNoteButtonStatus.Hidden:\n                toggleClass.call(this.player, addLectureNoteButton, 'disable', true);\n                toggleClass.call(this.player, addLectureNoteButton, 'hidden', true);\n                toggleClass.call(this.player, '.plyr__lecture-note-container', 'hidden', true);\n                break;\n            default:\n                break;\n        }\n    }\n\n    setupUI () {\n        if (this.player.supported.ui) {\n            const lectureNoteContainer = this.getContainer();\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                const note = this.lectureNoteList[i];\n                if (!this.isLectureNoteExists(note._id)) {\n                    const lectureNoteDOM = this.generateLectureNoteDOM(note);\n                    lectureNoteContainer.appendChild(lectureNoteDOM);\n                }\n            }\n        }\n    }\n\n    initLectureNote (lectureNotes) {\n        if (this.player.supported.ui) {\n            this.lectureNoteList = lectureNotes;\n            this.isLoadedLectureNote = true;\n            this.setupUI();\n            this.enableLectureNote();\n        }\n    }\n\n    addLectureNote () {\n        if (this.player.playing) {\n            this.beforeAddLectureNotePlayerState = 'playing';\n        } else {\n            this.beforeAddLectureNotePlayerState = 'pause';\n        }\n\n        this.player.pause();\n\n        const time = Math.round(this.player.currentTime);\n        const note = this.getSameTimeLectureNote(time);\n        if (note) {\n            const lectureNoteContainer = getElement.call(this.player, `.lecture-note[data-id=\"${  note._id  }\"]`);\n            if (lectureNoteContainer) {\n                const contentContianer = lectureNoteContainer.querySelector('.lecture-note__content-container');\n                if (contentContianer) {\n                    const clickEvent = new Event('click');\n                    contentContianer.dispatchEvent(clickEvent);\n                }\n            }\n\n        } else {\n            this.disableLectureNote();\n            triggerEvent.call(this.player, this.player.media, 'lecturenotecreate', true , {\n                lectureNote: {\n                    time,\n                },\n            });\n        }\n    }\n\n    completeAddLectureNote (lectureNote) {\n        this.enableLectureNote();\n        const newLectureNote = Object.assign({}, lectureNote, {\n            showStatus: LectureNoteModel.ShowStatus.Edit,\n        });\n        this.lectureNoteList.push(newLectureNote);\n        const lectureNoteDOM = this.generateLectureNoteDOM(newLectureNote);\n        const lectureNoteContainer = this.getContainer();\n        lectureNoteContainer.appendChild(lectureNoteDOM);\n    }\n\n    removeLectureNote (lectureNote) {\n        const lectureNoteContainer = getElement.call(this.player, `div[data-id=\"${lectureNote._id}\"]`);\n        if (lectureNoteContainer) {\n            lectureNoteContainer.parentElement.removeChild(lectureNoteContainer);\n            for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n                if (this.lectureNoteList[i]._id === lectureNote._id) {\n                    this.lectureNoteList.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n\n    hasSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    getSameTimeLectureNote (time) {\n        for (let i = 0; i < this.lectureNoteList.length; i += 1) {\n            if (this.lectureNoteList[i].time === time) {\n                return this.lectureNoteList[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @private\n     * @return {null|*}\n     */\n    getContainer () {\n        if (this.lectureNoteContainer && !this.lectureNoteContainer.parentElement) {\n            this.lectureNoteContainer = null;\n        }\n        if (this.lectureNoteContainer === null) {\n            this.lectureNoteContainer = createElement('div', {\n                'class': 'plyr__lecture-note-container',\n            });\n            const progresses = getElement.call(this.player, this.player.config.selectors.progress);\n            if (progresses) {\n                progresses.appendChild(this.lectureNoteContainer);\n            }\n        }\n        return this.lectureNoteContainer;\n    }\n\n    /**\n     * @private\n     * @param lectureNoteId\n     * @return {boolean}\n     */\n    isLectureNoteExists (lectureNoteId) {\n        return getElement.call(this.player, `.lecture-note[data-id=\"${lectureNoteId}\"]`) !== null;\n    }\n\n    /**\n     * @private\n     * @param lectureNote\n     */\n    generateLectureNoteDOM (lectureNote) {\n        const { duration } = this.player;\n        const percent = (lectureNote.time / duration) * 100 || 0;\n\n        let cancelTimeout = null;\n\n        const lectureNoteContainer = createElement('div', {\n            'data-id': lectureNote._id,\n            class: 'lecture-note',\n        });\n\n        /* lecture-note__mark */\n        const className = 'lecture-note__mark';\n        const mark = createElement('span', {\n            class: className,\n        });\n        lectureNoteContainer.appendChild(mark);\n\n        // 點擊 mark 跳到對應的播放時間\n        mark.addEventListener('click', (e) => {\n            this.player.currentTime = lectureNote.time;\n            e.preventDefault();\n            e.stopPropagation();\n        });\n        /* lecture-note__mark */\n\n        /* lecture-note__content-container */\n        const status = lectureNote.showStatus;\n        const contentContainer = createElement('div', {\n            class: `lecture-note__content-container ${status === LectureNoteModel.ShowStatus.Edit ? ' lecture-note__content-container--edit' : ''}`,\n        });\n        lectureNoteContainer.appendChild(contentContainer);\n        /* lecture-note__content-container */\n\n        /* lecture-note__content-textarea */\n        const contentTextarea = createElement('textarea', {\n            class: 'lecture-note__content-textarea',\n            placeholder: '新增筆記 (限 50 字)',\n            maxLength: 50,\n            rows: 1,\n        });\n        contentTextarea.value = lectureNote.note || '';\n        contentContainer.appendChild(contentTextarea);\n        /* lecture-note__content-textarea */\n\n        /* lecture-note__content-show-text */\n        const contentShowText = createElement('span', {\n            class: 'lecture-note__content-show-text',\n        });\n        contentShowText.innerHTML = lectureNote.note;\n        contentContainer.appendChild(contentShowText);\n        /* lecture-note__content-show-text */\n\n        /* lecture-note__trash-icon-wrapper */\n        const trashIconWrapper = createElement('span', {\n            class: 'lecture-note__trash-icon-wrapper',\n        });\n        const trashIcon = controls.createIcon.call(this.player, 'trash');\n        trashIconWrapper.appendChild(trashIcon);\n        contentContainer.appendChild(trashIconWrapper);\n        // 點擊垃圾桶 icon 刪除 lecturenote\n        trashIconWrapper.addEventListener('click', (e) => {\n            triggerEvent.call(this.player, this.player.media, 'lecturenotedelete', true ,{\n                lectureNote,\n            });\n            this.removeLectureNote(lectureNote);\n        });\n        /* lecture-note__trash-icon-wrapper */\n\n        // 修正產生 DOM 時，靠近影片結束時，筆記會跑版的問題\n        const container = this.getContainer();\n        const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n        if (percent > leftLimit) {\n            toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n        } else {\n            toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n        }\n\n        // 點擊 container 開啟編輯模式\n        contentContainer.addEventListener('click', (e) => {\n            if (lectureNote.showStatus !== LectureNoteModel.ShowStatus.Edit) {\n                if (this.player.playing) {\n                    this.beforeEditLectureNotePlayerState = 'playing';\n                } else {\n                    this.beforeEditLectureNotePlayerState = 'pause';\n                }\n                this.player.pause();\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', true);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Edit;\n                contentTextarea.style.height = 'auto';\n                contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n                contentTextarea.focus();\n            }\n        });\n\n\n        setTimeout(() => {\n            contentTextarea.focus();\n        }, 50);\n\n        contentTextarea.addEventListener('keyup', () => {\n            contentTextarea.style.height = 'auto';\n            contentTextarea.style.height = `${contentTextarea.scrollHeight}px`;\n        });\n\n        let isInComposition = false;\n        contentTextarea.addEventListener('compositionstart', (e) => {\n            isInComposition = true;\n        });\n\n        contentTextarea.addEventListener('compositionend', (e) => {\n            setTimeout(() => {\n                isInComposition = false;\n            }, 10);\n        });\n\n        contentTextarea.addEventListener('keydown', (e) => {\n            if (!isInComposition && e.key === 'Enter') {\n                lectureNote.note = contentTextarea.value;\n                contentShowText.innerHTML = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n                toggleClass(lectureNoteContainer, 'hover', true);\n                cancelTimeout = setTimeout(() => {\n                    toggleClass(lectureNoteContainer, 'hover', false);\n                }, 1000);\n                triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                    lectureNote,\n                });\n                console.group('keydown enter');\n                console.log(this.beforeAddLectureNotePlayerState, this.beforeEditLectureNotePlayerState);\n                console.groupEnd();\n                try{\n                    if (this.beforeAddLectureNotePlayerState) {\n                        if (this.beforeAddLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeAddLectureNotePlayerState = null;\n                    }\n                    if (this.beforeEditLectureNotePlayerState) {\n                        if (this.beforeEditLectureNotePlayerState === 'playing') {\n                            this.player.play();\n                        }\n                        this.beforeEditLectureNotePlayerState = null;\n                    }\n                } catch (e) {\n                    // ignore\n                }\n                e.preventDefault();\n            }\n            if (e.key === 'Escape') {\n                contentTextarea.value = lectureNote.note;\n                toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n                lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            }\n        });\n\n        contentTextarea.addEventListener('blur', (e) => {\n            lectureNote.note = contentTextarea.value;\n            contentShowText.innerHTML = lectureNote.note;\n            toggleClass(contentContainer, 'lecture-note__content-container--edit', false);\n            lectureNote.showStatus = LectureNoteModel.ShowStatus.Hide;\n            toggleClass(lectureNoteContainer, 'hover', true);\n            cancelTimeout = setTimeout(() => {\n                toggleClass(lectureNoteContainer, 'hover', false);\n            }, 1000);\n            triggerEvent.call(this.player, this.player.media, 'lecturenoteupdate', true, {\n                lectureNote,\n            });\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        mark.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseenter', (e) => {\n            if (cancelTimeout) {\n                clearTimeout(cancelTimeout);\n                cancelTimeout = null;\n            }\n            toggleClass(contentContainer, 'lecture-note__content-container--show', true);\n            const container = this.getContainer();\n            const leftLimit = ((container.offsetWidth - 200) / container.offsetWidth) * 100 || 0;\n            if (percent > leftLimit) {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', true);\n            } else {\n                toggleClass(contentContainer, 'lecture-note__content-container--near-end', false);\n            }\n            e.preventDefault();\n        });\n\n        contentContainer.addEventListener('mouseleave', (e) => {\n            cancelTimeout = setTimeout(() => {\n                toggleClass(contentContainer, 'lecture-note__content-container--show', false);\n            }, 500);\n\n            e.preventDefault();\n        });\n\n        lectureNoteContainer.style.left = `calc(${percent}%)`;\n        return lectureNoteContainer;\n    }\n}\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport captions from './captions';\nimport { providers } from './config/types';\nimport controls from './controls';\nimport html5 from './html5';\nimport media from './media';\nimport support from './support';\nimport ui from './ui';\nimport { createElement, insertElement, removeElement, setAttributes } from './utils/elements';\nimport is from './utils/is';\nimport browser from './utils/browser';\nimport { getDeep } from './utils/objects';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (is.string(attributes)) {\n            insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (is.array(attributes)) {\n            attributes.forEach(attribute => {\n                insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!getDeep(input, 'sources.length')) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        const tracks = Array.from(this.media.querySelectorAll('track'));\n        removeElement(tracks);\n        this.captions.currentTrack = -1;\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                this.lectureNote.clear();\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                removeElement(this.media);\n\n                // Reset class name\n                if (is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // retain old provider and type\n                const prevType = this.type;\n                const prevProvider = this.provider;\n\n                // Set the type and provider\n                const { sources, type } = input;\n                const [{ provider = providers.html5, src }] = sources;\n                const tagName = provider === 'html5' ? type : 'div';\n                const attributes = provider === 'html5' ? {} : { src };\n\n                Object.assign(this, {\n                    provider,\n                    type,\n                    // Check for support\n                    supported: support.check(type, provider, this.config.playsinline),\n                });\n\n                if (prevType === type && prevProvider === provider && provider === providers.html5) {\n                    /**\n                     * if provider is html5 and setting is same as prev source,\n                     * retain media element (because ios system has limited resource,\n                     * can't create many video resource)\n                     */\n                    setAttributes(this.media, attributes);\n                } else {\n                    this.media = null;\n                    this.media = createElement(tagName, attributes);\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if (!is.empty(input.poster)) {\n                        this.poster = input.poster;\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n                ui.addStylehookToFullscreenContainer.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', sources);\n                    this.media.setAttribute('src', sources[0].src);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // restore video quality\n                const quality = this.storage.get('quality');\n                if (is.number(quality)) {\n                    this.media.quality = quality;\n                }\n\n                let defaultCaption = null;\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                        const defaultTracks = input.tracks.filter(track => track.default);\n                        if (defaultTracks.length > 0 ){\n                            defaultCaption = defaultTracks[0].srclang;\n                        }\n                        if(this.media.textTracks && browser.isEdge){\n                            for(var i = 0; i< this.media.textTracks.length; i++){\n                                this.media.textTracks[i].mode = 'hidden';\n                            }\n                        }\n                        captions.update.call(this);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n                captions.setDefault.call(this, defaultCaption);\n                const speed = this.storage.get('speed');\n                if (is.number(speed)) {\n                    this.speed = speed;\n                    controls.updateSetting.call(this, 'speed', speed);\n                }\n                this.lectureNote.setupUI();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.3.23\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport captions from './captions';\nimport defaults from './config/defaults';\nimport { getProviderByUrl, providers, types } from './config/types';\nimport Console from './console';\nimport controls from './controls';\nimport Fullscreen from './fullscreen';\nimport hahow from './hahowCustomControl';\nimport Listeners from './listeners';\nimport logo from './logo';\nimport media from './media';\nimport Ads from './plugins/ads';\n\nimport LectureNote from './plugins/lectureNote';\nimport source from './source';\nimport Storage from './storage';\nimport support from './support';\nimport ui from './ui';\nimport { closest } from './utils/arrays';\nimport { createElement, hasClass, removeElement, replaceElement, toggleClass, wrap } from './utils/elements';\nimport { off, on, once, triggerEvent, unbindListeners } from './utils/events';\nimport is from './utils/is';\nimport loadSprite from './utils/loadSprite';\nimport { cloneDeep, extend } from './utils/objects';\nimport { parseUrl } from './utils/urls';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || is.nodeList(this.media) || is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = extend(\n            {},\n            defaults,\n            Plyr.defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: -1,\n            meta: new WeakMap(),\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (is.nullOrUndefined(this.media) || !is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        const clone = this.media.cloneNode(true);\n        clone.autoplay = false;\n        this.elements.original = clone;\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (is.element(iframe)) {\n                    // Detect provider\n                    url = parseUrl(iframe.getAttribute('src'));\n                    this.provider = getProviderByUrl(url.toString());\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    if (url.search.length) {\n                        const truthy = ['1', 'true'];\n\n                        if (truthy.includes(url.searchParams.get('autoplay'))) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(url.searchParams.get('loop'))) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(url.searchParams.get('playsinline'));\n                            this.config.hl = url.searchParams.get('hl');\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        this.eventListeners = [];\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!is.element(this.elements.container)) {\n            this.elements.container = createElement('div');\n            wrap(this.media, this.elements.container);\n        }\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n        ui.addStylehookToFullscreenContainer.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            on.call(this, this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        logo.setup.call(this);\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        this.lectureNote = new LectureNote(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!is.function(this.media.play)) {\n            return null;\n        }\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended);\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get stopped state\n     */\n    get stopped() {\n        return Boolean(this.paused && this.currentTime === 0);\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.pause();\n            this.restart();\n        } else if (is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        // Bail if media duration isn't available yet\n        if (!this.duration) {\n            return;\n        }\n\n        // Validate input\n        const inputIsValid = is.number(input) && input > 0;\n\n        // Set\n        this.media.currentTime = inputIsValid ? Math.min(input, this.duration) : 0;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // Media duration can be NaN or Infinity before the media has loaded\n        const realDuration = (this.media || {}).duration;\n        const duration = !is.number(realDuration) || realDuration === Infinity ? 0 : realDuration;\n\n        // If config duration is funky, use regular duration\n        return fauxDuration || duration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (is.number(step) ? step : 0);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        this.increaseVolume(-step);\n    }\n\n    set fullscreenContainer (container) {\n        if (is.element(container)) {\n            this.config.fullscreenContainer = container;\n            ui.addStylehookToFullscreenContainer.call(this);\n        }\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (is.number(input)) {\n            speed = input;\n        }\n\n        if (!is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        const config = this.config.quality;\n        const options = this.options.quality;\n\n        if (!options.length) {\n            return;\n        }\n\n        let quality = [\n            !is.empty(input) && Number(input),\n            this.storage.get('quality'),\n            config.selected,\n            config.default,\n        ].find(is.number);\n\n        if (!options.includes(quality)) {\n            const value = closest(options, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${value} instead`);\n            quality = value;\n        } else if (`${quality}` === `${input}`) {\n            this.storage.set({\n                quality,\n            });\n        }\n\n        // Trigger request event\n        triggerEvent.call(this, this.media, 'qualityrequested', false, { quality });\n\n        // Update config\n        config.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isVideo) {\n            this.debug.warn('Poster can only be set for video');\n            return;\n        }\n\n        ui.setPoster.call(this, input, false).catch(() => {});\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        captions.toggle.call(this, input, false);\n    }\n\n    /**\n     * Set the caption track by index\n     * @param {number} - Caption index\n     */\n    set currentTrack(input) {\n        captions.set.call(this, input, false);\n    }\n\n    /**\n     * Get the current caption track index (-1 if disabled)\n     */\n    get currentTrack() {\n        const { toggled, currentTrack } = this.captions;\n        return toggled ? currentTrack : -1;\n    }\n\n    set captionPosition(input) {\n        this.captions.position = input;\n        this.storage.set({\n            captionPosition: input,\n        });\n        captions.setPosition.call(this, this.captions.position);\n    }\n\n    get captionPosition() {\n        return this.storage.get('captionPosition') || this.config.captions.position;\n    }\n\n    /**\n     * Set the wanted language for captions\n     * Since tracks can be added later it won't update the actual caption track until there is a matching track\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        captions.setLanguage.call(this, input, false);\n    }\n\n    /**\n     * Get the current track's language\n     */\n    get language() {\n        return (captions.getCurrentTrack.call(this) || {}).language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} [toggle] - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // Don't toggle if missing UI support or if it's audio\n        if (this.supported.ui && !this.isAudio) {\n            // Get state before change\n            const isHidden = hasClass(this.elements.container, this.config.classNames.hideControls);\n\n            // Negate the argument if not undefined since adding the class to hides the controls\n            const force = typeof toggle === 'undefined' ? undefined : !toggle;\n\n            // Apply and get updated state\n            const hiding = toggleClass(this.elements.container, this.config.classNames.hideControls, force);\n\n            // Close menu\n            if (hiding && !is.empty(this.config.settings)) {\n                controls.toggleMenu.call(this, false);\n            }\n            // Trigger event on change\n            if (hiding !== isHidden) {\n                const eventName = hiding ? 'controlshidden' : 'controlsshown';\n                triggerEvent.call(this, this.media, eventName);\n            }\n            return !hiding;\n        }\n        return false;\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        on.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Add event listeners once\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    once(event, callback) {\n        once.call(this, this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    removeElement(this.elements.buttons.play);\n                    removeElement(this.elements.captions);\n                    removeElement(this.elements.controls);\n                    removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                unbindListeners.call(this);\n\n                // Replace the container with the original element provided\n                replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                triggerEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Provider specific stuff\n        if (this.isHTML5) {\n            // Clear timeout\n            clearTimeout(this.timers.loading);\n\n            // Restore native video controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Clean up\n            done();\n        } else if (this.isYouTube) {\n            // Clear timers\n            clearInterval(this.timers.buffering);\n            clearInterval(this.timers.playing);\n\n            // Destroy YouTube API\n            if (this.embed !== null && is.function(this.embed.destroy)) {\n                this.embed.destroy();\n            }\n\n            // Clean up\n            done();\n        } else if (this.isVimeo) {\n            // Destroy Vimeo API\n            // then clean up (wait, to prevent postmessage errors)\n            if (this.embed !== null) {\n                this.embed.unload().then(done);\n            }\n\n            // Vimeo does not always return\n            setTimeout(done, 200);\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return loadSprite(url, id);\n    }\n\n    /**\n     * Setup multiple instances\n     * @param {*} selector\n     * @param {object} options\n     */\n    static setup(selector, options = {}) {\n        let targets = null;\n\n        if (is.string(selector)) {\n            targets = Array.from(document.querySelectorAll(selector));\n        } else if (is.nodeList(selector)) {\n            targets = Array.from(selector);\n        } else if (is.array(selector)) {\n            targets = selector.filter(is.element);\n        }\n\n        if (is.empty(targets)) {\n            return null;\n        }\n\n        return targets.map(t => new Plyr(t, options));\n    }\n}\n\nPlyr.defaults = cloneDeep(defaults);\nPlyr.hahow = hahow;\nexport default Plyr;\n"]}